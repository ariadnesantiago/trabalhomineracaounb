Base de dados importada
Lista de textos aleatorios criada de 78856 textos
Quantiadade de textos:
35780
Matriz de tfidf feita. Tamanho da matriz:
(35780, 4931)
Matriz de tfidf:
{'metropolitan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fraud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'drunk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'certai': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saliv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumphous': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'museveni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'renew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'prove': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bulli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'prejudic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bbc5live': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'play': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benefit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'prison': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'theori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lament': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lgti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'halala': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sex': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'senior': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sworn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hillary': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'amandaseitz1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zealand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'button': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'podium': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '300': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'muhal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moir_alan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'roar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'pennsylva': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scrimgeour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alecbaldwin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'tedcruz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'defiantli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '218': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'actual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'conflict': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'coz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mouth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'phillygop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'va': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'edmazza': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'react': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'brick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'malala': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'creat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'chalk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bitch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'similar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'potu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'repetit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'benshapiro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '860': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'resolut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dnt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'finland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'dow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'karma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'religion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'worker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ae': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sunk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'millenni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'villain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'becam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'bowi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barbara': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '0': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'car': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'far': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'state': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'sore': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'killari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'publish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lonelyplanet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wayn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'ludicr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '23': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'robot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alisonjackson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'continu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'alway': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'respect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'ye': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'santana': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'nowher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'negin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dermottodayfm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'misinform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grovel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'copiou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'stori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'episod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'kanyewest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dont': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deliveri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'counti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'helicopt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rosemcgowan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mortar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'transit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'jonstewartbook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'war': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'championship': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lukeethornhil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'april': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'visit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shouldn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'email': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'lcfc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'advertis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'looser': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'latest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'sjw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'hostag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trepid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'demis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'famili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'unravel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '11are': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appropri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kkk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scale': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shield': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'angel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'speakerryan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'malynshandmad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'daddi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hors': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'easier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jinp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'day': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suspect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hillari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'layer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ident': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, '20th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'constitut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'l': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'charlottechurch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'okay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'cat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brewster': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'set': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dunham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'weegingerdug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'almighti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'burden': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'servic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sallykohn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'ass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'ghastli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tupac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sooner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xderank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'sarkodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cbcnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'murica': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hafizsaeedpr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'import': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yoh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alpha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sprung': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'wine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dope': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vivvi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'modern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'ov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'crook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yawn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'billionair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'meemaw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'sarkar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'highway': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'earth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'copi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thnk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gona': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'nonwhit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'catch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thisisrobthoma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ok': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'modifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uneduc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'student': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'economi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'punk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pivot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'onc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'basic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sole': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'kraecarney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'jihad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'workplac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'check': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'berniebrigad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overplay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iamspencez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'haven': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'clown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'corrupt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'style': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'network': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bawdi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'globalcalgari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'est': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '_itssamyraa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cliff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mamnoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ladbrook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'figur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'campu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'replac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lannist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anyon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'haul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'motiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'illuminati': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mayaysian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'like': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'batshit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ugobarthi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'prosecutor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'penanc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '09': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wors': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'breitbartnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'satisfi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'momma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'candi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'red': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brawday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'elec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'popcorn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'angl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'japan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theresamechel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'woopi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'tumbl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'archi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'god': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'sheep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'analyst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'girl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'destroy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'supremaci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'didja': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grindr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'persuas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alwaleed_tal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vindic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, '100': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'entitl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'movi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'town': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disagre': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'perri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tweet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'groggi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pastor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'don': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'matur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iranian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fivethirtyeight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'begun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'free': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aren': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vandal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'saniti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apocalypt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rambobigg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'headlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'strongman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'flashpoint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'going2announc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'branch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trrw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swallow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'politician': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'report': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'abl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prouder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'regard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mobil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ancestor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'donkey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'vrwctexan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seced': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proceed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'seanhann': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'denni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'googletrend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'highlight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'keester': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'humor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gomez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, '56th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unimport': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'louisiana': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'servant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fallout': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'legitim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bitchi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loooool': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'loconserv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ordinari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taller': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'older': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'logic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jonkarl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'overreact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'assess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'levi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shout': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rodleybarb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awful': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'background': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'media': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'ladi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'acdelion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'sander': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mornin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hobbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'muslim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'whip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'articl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wiah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'auto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'monopoli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'toldyaso': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'pokemon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foxnewspolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'af': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'f4f': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'solut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'male': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'live': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lucki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'upset': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'erictrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abyss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cuck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jajajajajajajajajaj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'graphic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'erwoti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '30': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'journal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'tripl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bonu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, '1980': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hypocrisi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'banker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'gloriou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ingrahamangl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hahahahaha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcdonald': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guyofjong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, '48': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'morn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'robert': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'david': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'usual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'handsom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chinyer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'alert': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'pleasur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'graduat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expedia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'navqazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shitpost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'stuff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shortli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fault': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abfalecbaldwin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dragon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'situat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'squar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mshuuka': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'putin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'congradul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'undefin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'captain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nevermind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mubarak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'patriotmom61': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pundit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'behav': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'realaje': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beggar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'reason': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'attempt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'titl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'overcook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barrier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'babe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wikileak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'joshua': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'djt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tarmac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'entertain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'igazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'closet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'intellig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'role': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disappoint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'im__a__rad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'youranonnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'san': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aris': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anoth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chinki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'larrysabato': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'border': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '7': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'austin_amelio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'teamtrumpaz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pennsylvania': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'arnettwil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apoplect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'gunna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'bbc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vanjones68': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'veteran4trump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'presidenttrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wore': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sane': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spanish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'futur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'son': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'sh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'extens': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'recal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'huffpostpol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sleep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'coteri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'semest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'address': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alyssa_milano': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cbsnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'lar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lunat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'review': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hello': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nfl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'charg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'freak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'tyrion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mental': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'investor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'fabul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mikemondo1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mickaylaaaa__': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'brunch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dalal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'esther59535847': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'waver': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'votemarsha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'snow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'presidenti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gs3rd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miakhalifa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'grad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'class': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gambl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sargon_of_akkad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'raesremmurd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'food': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '8': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'road': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'enlighten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hilari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'woken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wonder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imran': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deepli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'inherit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'melt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'esyhanp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'olliebarbieri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kassydillon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'suggest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miley': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'prime': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trudeau': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'penn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '3rd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awesom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'problem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'time': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maggi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doesn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imposs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'influenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miniatur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'total': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'toilet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'subsid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sweeti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'atavist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'john': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apocalyps': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bulb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'adorn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'protest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'somebodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prepar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'touchdown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'rais': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dunia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '10hr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'henc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'accur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'globalist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dfw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nigeria': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '11': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'niazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'calendar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'garcia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '350': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'reach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'combov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prosper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'solidar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'grader': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bahir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'broadcast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'highli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'half': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kthopkin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, '2me': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'realiti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'accus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'selen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paulgalloshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'told': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'song': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'corbyn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cleans': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'promot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joshwiddicomb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pond': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'rn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'histori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thx': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'direct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'apprentic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bunch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yorker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'clair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'lash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'battl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2130': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'erot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clean': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'silent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'spoke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'technic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'glad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ive': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grabber': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weren': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'horoscop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'marseil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unfollow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'parri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lastnight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'church': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'hq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bluff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pile': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'firm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'astonish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'dismay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'box': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'seat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'republican': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'southpark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'throw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apologis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oitnb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '52': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'todayshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thelegendmac1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'depress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'avail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'razak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'jesa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thing': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '90': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ticket': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'autofil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'perfectli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'given': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'second': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'jeremyclarkson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'abandon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'almanac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'rest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aliv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wasn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'outl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'maisonett': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'psycho': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alreadi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'listen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saturday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'vigil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lgbt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'baad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'accordingli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tune': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'nancyleegrahn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'libtard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bush': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'muse': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'wouldn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'someon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ronald': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'video': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wednesday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anytim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'erdogan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'phuppo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wale': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'count': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'web': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'qualifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'porn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ewerickson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kareem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tytnetwork': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'denounc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'relief': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'roof': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amerikkka': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obviou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jacob': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abomin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'derang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'properti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eagl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'viral': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'underwear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'intern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'honor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moremi_tshepiso': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'struggl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pothead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'backwood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'river': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'candid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'product': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'underestim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'ericbol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '276': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alcombirmingham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'cachorro1337': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'newseum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'toil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kt_dimpl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'brain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'request': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'asgard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'dre': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'break': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'pamelabartley': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'clock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'eyadini': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plural': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cheer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, '2all': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'domshow1210': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'effort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ourselv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tradit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '60': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'involv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'adolf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'glori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fionadonnellan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sheriff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'latino': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'normal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lakh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hysteria': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'mix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'philosoph': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'kenmijungu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sharpest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'research': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'optimist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yeah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'gon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bullshit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'authoritarian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'harryenloui': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drove': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'badmash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mzanzi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ladygaga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hire': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lmscampi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'footbal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ryanair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'verizon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hardli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rethink': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hunker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'combin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ginsberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whenev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shitshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brittani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'websummit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'wal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hagoodmanauthor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yourselv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'patrick_hosti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'frustrat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'screenshot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'emp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'map': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'conquer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'thehel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nawazfuckedbyn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'traffic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'filter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cnbc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'white': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'switzerland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'resili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'step': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '30am': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'screw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'featur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dignisi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'held': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcdreamysmer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'januari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pseudo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'gosh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'content': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'alright': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pardon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asshol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'workout': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abject': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jungl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'experienc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wildli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'netherland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'countri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'peaceact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'democrazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'load': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'talkradio1210': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aww': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'swanksterr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'constitu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scottish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disparag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ko': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pussi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yanisvaroufaki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'shop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'aint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cabinet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'whine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'domin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nobodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'cbcwindsor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'swamp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'burg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'singl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eastwoodusa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'garbag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lawn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'sound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'campaign': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'storm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'luckili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'garland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'result': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slide': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alphabetsuccess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'custom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'syria': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'algattullo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'samiafox10': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'congress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'strength': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'suppos': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brangelina': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yng': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'written': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'bite': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'till': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'michelleobama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'liberian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nightstand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'blast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oopsigothibeotc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ccpastormik': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'store': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'base': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foxbusi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'hdtorch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'idiot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jesu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'physic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'king': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'closer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rulisteningltd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'provid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'thejuanwilliam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'job': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ground': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'irrespons': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slipper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gore': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'goe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'measur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moneywatchsc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'dunleavylaw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gonn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hpnd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'light': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'joshdanieluk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'insur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mourn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'belliger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'phelp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'honey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'felicia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'donaldjtrumpjr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hai': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'secular': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'unit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bitter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beernsinglegirl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'somaar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'ho': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'schutt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'genuin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '9': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahmadiyya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taught': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'sharpli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '80': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mulla': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sabato': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'au': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thoroughli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sequenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'materialis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'halloween': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'capitalfmkenya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'honest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carrier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'savag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '99': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'amcannott': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bibl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jese': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grandpar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'utter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'michel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'odd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'tee': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ukrain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suntim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swiss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'person': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gradul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kindli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'landscap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'remov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'zodwa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kevingagaloo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fellow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'legend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'roug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'michigan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bruh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'damon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'giladatzmon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bubbl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'mrssabcorintho': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'jfk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'piti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'butthurt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'racer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'final': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oft': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'subscrib': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'union': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'embarass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'illus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'salvator': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'staunch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'celb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'captur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unmistak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'digniti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thesagerbomb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'pack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'kasnomad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whwhsh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hot97': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'troll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'area': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fool': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'finish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lena': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'brit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '85': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'art': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'retro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'toe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blairhduquesnay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ebon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'establish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'regim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mileycyru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overtim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'walkout': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kinda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'downturn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'badass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'rosi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'domest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'striker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johnson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'innumer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'wick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'uhaul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soyisraelcast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'describ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'facet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'novemb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'disguist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'note': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tpinsidr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'walmart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'woah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'linkedin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'gilmor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ideolog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'eater': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'news': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chose': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'etsi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'behalf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'femal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stronger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'greta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'woke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'reapplying4u': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saudi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'livemint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sheet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'condescend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'recess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hashtag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'gratifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bryancranston': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'friend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'away': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mikehurstm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meanest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'snapchat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'standard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saddest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'burn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'w': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obvious': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hispan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sethmey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aasif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'potato': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'beforetheflood_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'district': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mikepencevp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'achiev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'veri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'controversi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'itv2': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'victori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'greatest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'haunt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'inva': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'arm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoax': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scharf19': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'armor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'happi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'makeup': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_____': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'johnand2015': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'keeper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'bastard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'foundat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'funer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bakari_sel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'memori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'huffingtonpost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'podesta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'si': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'notif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jamaican': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'organ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mother': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'deez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'triumph': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'invad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'adulthood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'start': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'somewher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'abercrombi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'newyork': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'differ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wld': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'documentari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hav': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lgbtq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'washington': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'room': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'decor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'emigr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'perman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'haha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'digit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trollkejri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'youth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'princ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oyee': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'drudge_report': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reflect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grandma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'social': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iam_sammysnow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'presid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vladimir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nnamdianekw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paddl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sanction': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hussein': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'cooki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'bcuz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'impact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'michael': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'inform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swedish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2007': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'startup': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kaguta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'letter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wilkin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wise': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'nou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'project': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bhutto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'onlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'republ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'afraid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'autocorrect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'livestream': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'old': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scoff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'alarm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deplor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'nadesanya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sayin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'riseagainst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sarcast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dumbest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chicken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'understand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bco': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lose': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'pari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rule': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lover': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'speak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'albun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'mofo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'action': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mileston': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'newspap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gloom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'await': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sister': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'authoritar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'restor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'refus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prefect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'ev1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'afghanistan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pharma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cycl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cheat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'supertramp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mandvi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goodby': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'insult': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beyonc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'idea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'park': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'richyricha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nope': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soapi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kashmir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'epa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prisonplanet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'reject': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freedom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vendor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'nuclear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'favorit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'simpson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'denial': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bwahahaha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'li': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'airforc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mike_p': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'spi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'democrat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'hasn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cali': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whoopi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'man': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '01173763732': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heartbroken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'radiologist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pledg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bingo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oopsi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'kleenex': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hawaii': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nikal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reinvent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'threw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lockhart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wether': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'smash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'shake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chines': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'allow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theirwinempir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'miracul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hoe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'footbaiinewsday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'undon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'becom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'vietnames': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pride': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'facepalm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'thrown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'orang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unbridl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'predict': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'bretbaier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'et': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'balm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'paulo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'raven': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eslec15': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'jdmahama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'label': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hero': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'rid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'later': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'patriot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wakeupcanada': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'introduc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'announc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amnesti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'elector': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deepika': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kezdugdal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpster': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'yard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'rudygiulianigop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'indict': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'stupidest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'workmanship': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'kellyann': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'govern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcuban': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iamjohnoliv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'metaphor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sugar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'apolog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'richest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'gee': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'umlazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'denier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'compromis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'every1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'serial': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'jangobear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mislead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ivi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'emot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'savannahguthri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spread': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'siyasi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'arabia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'london': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bewilder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nra': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'turd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'higher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'troubl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'proudli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpoath12017': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sharif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everyday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'lesser': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scottpresl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'gift': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'clear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scroll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'georgia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bannon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'felon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lee': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ra': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'remoan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hotlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'directli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mmflint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, '2053pam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'americanair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'cast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rememb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'barri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'trophi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buddi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ledg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'record': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bertkreisch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rapper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'learnt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uncertainti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'varga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'christian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'steal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'commentari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dive': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rt_russian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mccain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'caseyneistat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'opinion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'signific': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'danc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'random': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'landslid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bolsonaro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'phrase': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fixtur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'politicsghost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miseri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'say': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'distract': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'presidento': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asphyxi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'ongelooflijk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'couldn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wider': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'choosesam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'head': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'analysi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'readi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ttip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'care': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'murder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'johndepetroshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pbo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'katyperri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hunter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'defin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xlf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exodu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'jarrieta34': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'revel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thought': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'nahh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'hang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dollar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mosqu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sprint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whitehous': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mmhm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_georg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'parscal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'confid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sky': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paulnoth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'satir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grneyedmandi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ali': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'trust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '140': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'librari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'desir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'flag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grade': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'fuk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'profess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'angallo8779': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'version': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johnpilg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ago': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'lawless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hrc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'wifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'goddamn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '10': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'york': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'nati': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'propag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'offici': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'preciou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'talk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'respons': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'east': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coehlo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'syrupronaldo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nose': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'belief': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'instead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hunt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '72': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'homer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gunman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'option': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'motorola': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'dewey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'packer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nevemind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nowaday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '6': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'escap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'panti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'bunker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bayonet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'juan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tweep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asylum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fulfil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gotten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cyru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'johnmcternan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'valu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'palat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bhi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'privileg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'coal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'immatur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'ebay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kudo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'younger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mailonlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stephen_wood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'coffe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'pic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'model': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'europ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smarter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'advanc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'glass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'moan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fanci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'raw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foolish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'intoler': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'agreement': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aunt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jayoil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'georgi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blond': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kingladygaga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exactli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'steinmeier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dnc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ceci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'middl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'melaniatrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kaufman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'militari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'chelseahandl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'assum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'water': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'farc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'desper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grope': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '10tv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gender': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'groom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'atm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dmon4ev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'librarian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'transexu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leadership': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'netflix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dinner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loretta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'lotto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'husband': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'upper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taradublinrock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'date': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'populist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'groundbreak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'extra': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chevi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'repudi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monitor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'greasi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benefici': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'incid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'lack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'classless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'data': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tie': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quiet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'lag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aka': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'maintain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'someth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sorr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'viciou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'choic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scariest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'beeen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'wh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shred': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'color': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cityofatlanta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'latuffcartoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'justine_burt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'samuelljackson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kelli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kyiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'friendli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pmoindia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'admit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hamza': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'twitch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'electron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coloni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sexism': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'vagina': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'immol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mgmadvertis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'narr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pompou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anxiou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'misguid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'inconsidera': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'explan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'editor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'le': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'matrix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nytim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expedit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'budapest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'contrast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deserv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'peaceandlove2a': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'happili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'function': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'cooper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'magic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hindurajyam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'que': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '27year': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'billkristol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'b': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'probabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'welfar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'lt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'berlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'erect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gugsm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anncoult': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ummm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'arab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'come': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'warm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'incorrect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'platform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reagan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'vlogger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'opportun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'kind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peddl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'divis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'devast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'despit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'theresa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'redneck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'act': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'remain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pizza': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'julian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'littl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'iguana': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iraq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ongo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inspir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'talent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'band': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cartoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uncertin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'elit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exemplifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bachar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'worth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mikewtrapp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'untold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'har': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'explain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maria': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lace': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'dick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ring': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cheater': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'rant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tyleroakley': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tellmamauk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'muthafugga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'work': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'la': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'singer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'bother': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bhai': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saver': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'greyhound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'recoveri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dawn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'train': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'e1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'knock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'activist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'litterali': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'benjamin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_animaladvoc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bourbon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'edg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'delici': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'democratis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rich': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reaction': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fabr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leagu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'juddapatow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'franklin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'solv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wife': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ini': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'valci_domenik': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smith': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'curs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'steak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'patriarchi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'irl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'german': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'cover': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '3am': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plung': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'refund': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flunk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'win': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'faggot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'unbeliev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'horrend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zero': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goodmorn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kicker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'raci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harsh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'fled': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'propheci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'walk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wheel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bore': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loyalti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'assault': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'believ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'long': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'massiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'chang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'strike': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'adel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plagu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'collect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'darkest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ft': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yoweri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ede': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'compet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thesun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'mysteri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'todayprais': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'caption': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yup': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'india': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'ballot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theipap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'need': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beauti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'compani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'number': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'air': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'czabe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'kardashian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '5': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ww2': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'vdubes': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'spend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'rub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'violenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1939': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'duck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proverbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'home': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spoil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'went': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '53': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ismail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'john383': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'heal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'decemb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'basebal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tbh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'handley_dix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'infinit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sexist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mattylovesadel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foget': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sing': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'breath': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trillatristan_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pipe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'georg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'graceless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '14': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forgiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cheap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'drain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'societi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trial': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'justifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merica': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ultim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sanctiti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'truli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'wherea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'scenic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wwiii': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'holi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'princeroyc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'allegi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'voter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'queen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hoot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'releas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'predat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spoken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hindsight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fitzgerald': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'artist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hatemong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freedland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'professor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'abov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'att': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bull': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'americooligan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weather': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'descent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ashton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'han': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'phone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'podcast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'finger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'main': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guantanamo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eeuu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pole': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'katasonovamaria': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brotherhood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'volunt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'prayer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sens': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pedro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mehrtarar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'deficit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shoulder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stellar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'anniversari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'roti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tastebud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stolen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'e': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crimin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nike': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pocahanta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moral': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monkey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barackobama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'keemstar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wealth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'specul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'relat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tho': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'lopes495': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'juli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'wire': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ohh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tire': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'grab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'justanavywif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2018': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'collegehumor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'hollywood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'end': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deadeyejedi1980': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tirad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'weird': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'classic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'defend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '858': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'treasuri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disguis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lib': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alabama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sensand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drivetim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'israel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'yuge': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'strongest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chrislhay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'douch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'wound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'personifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'honestli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jolli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tcare': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cup': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jerusalem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thems': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mode': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fossil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'therealbquan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'frankmorano': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lincoln': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'pray': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'allah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'madonna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'impun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'libn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'katrinapierson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mpa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'prospect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'remark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fought': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'marginalis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foreign': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rape': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cuddl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, '1430': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'the101vib': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cultur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'trumper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peopl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'insert': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rosaamataa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meanwhil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'struggel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bartlet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'claim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'receiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'complain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'likhey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'planet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'belong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'unreal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chapter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reunion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whirlwind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'judg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '22': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'sand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'elect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ndtv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'huh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'regret': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'british': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'overheard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swansea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'shld': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'sort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'help': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'janefonda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'underdog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nonsen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'osh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'anywher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'combat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'yeezu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'literaci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '389new': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'neighborhood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'sequel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'type': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'revolutionari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'commi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nothin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'respond': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fuckin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'upsid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'send': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hardheartedli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'religi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lulu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'ellect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'notion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'distraught': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'didnt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'discuss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'lotteri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grrrgraphic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'speechless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cheerlead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'warmer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'clarkgain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cuba': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'trump2015u': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'billmah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'molest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'revers': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'charact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'make': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'locat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theurbanent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'motherland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'innoc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'schumer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'freilaur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'rascist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buuut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '500': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'madam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'bakeryfreshinla': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'favour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'douchebag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'debet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meme': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, '00': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'limo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'frenzi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'pleas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'energi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'purpos': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'colo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'noun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'marriag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ja': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'reli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'passion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whoa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dictat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'democraci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'felecia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evoc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taqdeer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoppin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'embarrass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'politico': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '27': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'todt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lift': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'flaw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'arvindkejriw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'emoji': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'diva': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'barbrastreisand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'francisco': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'decid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'narendramodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hasta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'slightli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'extraordinari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'omojuwa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'redeem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'phlegmat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'harmoni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'sanddragg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'geniu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'handbook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pooch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inde': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'protect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'micki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'graciou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'particularli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'offer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beurett': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'brush': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'telenovela': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'child': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'critic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loyalist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'alwaz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iasadm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'buland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'osama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'copenhagen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'rev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'andrew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iqbal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dare': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'googl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'washingtonpost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shirt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tommi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plutocraci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'basement': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'brekko': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'climb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'jackson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tsunami': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'excel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'meteorologist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'drink': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buttercup': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'globe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pentagon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fucker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'fucken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'p': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'agit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'isidingosabc3': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'mister': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'download': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'courag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'decad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'join': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'clever': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'regardless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'yoo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'holocaust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cool': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'armi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hilliaryclinton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wrong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rhetor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trauma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joybehar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'hallway': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whistl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kumawood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bigli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rougher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bruce': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'punchlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'draw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'question': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'italian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'osu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tobleron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'playin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ugli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2004': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'eman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'penc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'argument': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stephenk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zaayedmalick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hallelujah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sewn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'estim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'easili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'psephizo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'pick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'insight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'idiocraci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pregnant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'ep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'threat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'puppet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'issu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'selfish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2nd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flush': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mirsanaullah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'run': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'horror': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'forgotten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'switch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'jay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'glennbeck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fathom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'keke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'ma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'link': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'page': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obamacar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vs': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hughhancock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'china': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'erm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'teach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'event': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'australia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pleb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'najib': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bethisloco': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'greenday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'demean': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abolish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cuban': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'walkingdead_amc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, '016': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gotta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'wont': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'damnit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'condol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'code': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'conclud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moment': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'donald': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'touch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drought': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'estat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'felt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'law': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'intent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'veneer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jeb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'west': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'encourag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'dirt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stein': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'miracl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ex': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hahahahahahahahahahahahahahahahaha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ysa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'r': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bala': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ritawilson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nahin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'dem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'truman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tht': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grape': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'ghana': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jare': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 've': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eventu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'failur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'punditri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'elat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'rudygiuliani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'plantashaun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grandkid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'saath': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sentiment': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'outrag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'baratheon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gladli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everyon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bye': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'earlier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'men': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'met': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'decent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'homophob': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'rejoic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'ed_grimli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guilti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'su': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iphone7': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grantgust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wdcjoeb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '50': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'justic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sledgehamm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'befor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jupit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'speaker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'turn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'intact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trade': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'power': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'opieradio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zombi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'breitbartvideo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'demolish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'excit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'attent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'therev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'western': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'north': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'capesshawn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'fieri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'comment': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mashabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'welcom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'humen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'qualiti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'socalmedia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'si707': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hidden': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pollster': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'thier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deterior': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abbasi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'grassi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suprem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cbspolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'turmoil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'pictur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'farm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bleach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sudden': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'birthday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comparison': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sinead_errig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'liber': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unlighten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mansel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'stmpinfortrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'defi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'islam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'deedleslittl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tragic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'eu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'franc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quieter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pmsl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'better': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'omelett': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'repeat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thousand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'creek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'darl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uniti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cunt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rascal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'y': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'want': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nomin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awkward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'secur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'homeland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'level': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'requir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'offic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'return': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bigger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flee': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'britney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cancel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'omni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'neo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wicket': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'danscavino': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'triviumpaolo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'stump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'evolut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blue': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'posit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leaf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'zardari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monica': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'msnbc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'privat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nyc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'tonight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'rite': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hhahahahha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chessboard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'auburn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mlivecch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overtak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'design': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'affect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mistreat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'shud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'organiz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ppl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'european': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lolz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poetri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'disfigur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hostel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'absolutli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'green': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '2020': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grannieg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blindsid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'serv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'love': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'führer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vcdevri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'demand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'omg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abroad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'risk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'regress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pehl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bitchin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'polic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'comin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eastern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'senc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weigh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'piss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'funni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overnight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'skeem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ivankatrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'world': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'outlawdriver_72': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'wccbcharlott': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loophol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '13mp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'v': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2011': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heavi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'investig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ambassador': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aye': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'groen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'text': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'tic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fastest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'classier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'size': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'henryrops1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fotool': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pce': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'raza': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mire': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'radio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'frighten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'player': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'egg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hide': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bruin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chocol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fux': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'holiday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'manag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'threaten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whiter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'collabor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'bloodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jami': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lilyallen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fairli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'calm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'night': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'curvebal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uncl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'window': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'infring': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lifelong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yesyesyesyesyesyesyesyesyesyesyesyesyesyesyesyesyesysyesyesyesyesyesyesyesi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mirror': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'daughter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'made__usa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'impecc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benghazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ju': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'approv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'conspiraci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'current': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anchor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'chosen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hillaryclinton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'emperor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'edit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'redecor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'minor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'g': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ryan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unlik': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tiger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'playbook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'tabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'teenag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'joeffri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'handl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'million': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'daili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, '2600mah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'tsk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'realiz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hefner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, '2gb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flabbergast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'negro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unmerit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ser': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yesterday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'broken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hussain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'attn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hous': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jeff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nbcnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'ther0b0tofnyc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'case': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'savior': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'giant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lobbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpacalyps': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fund': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'self': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'consist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'backfir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'donot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'got': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fallen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'worri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'spon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'khudi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'itna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bedroom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'decenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cruz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whopigoldberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'louder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kagutamuseveni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buahahahahahah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hofam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bonn1egr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'retweet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'england': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'clinton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'po': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'friday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rofl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'airfar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'ki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goofi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'staff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'natur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'enviro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'micahdgaf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mike': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bajillion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '18': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aata': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heartfelt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1600': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'arrog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wiener': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'young': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sword': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'guid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aggress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sink': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'achi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'viscer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nawaz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cecymakesmus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'struck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kimkardashian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'stevejonespa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ima': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unborn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'industri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'otherwis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'commenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'conway': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'happier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rationalis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'revolut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whore': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'oprah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cute': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'earli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'johnmckeever13': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'enthusiast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'noam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'darwin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'isidingo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'neg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'behold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'muarrakh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'winner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'arianagrand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thefiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loser': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tugcowart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'popular': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comput': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'torn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'said': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ravensymon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nigh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'enemi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fluff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'pamkeynen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maniac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'melania': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'thrice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'lawsuit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'conserv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'consol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'panic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dobber': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'albeit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'budget': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'reaper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hamari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'confirm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anthem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pepsi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lynch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weirdo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shldn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'subject': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unrest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bright': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'backward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'weirdest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'scare': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trumpsarkar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'palestin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'place': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loudest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dukester_94': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'duncan_taylor10': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thomasklm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'romant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'yola': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'clap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sadist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drunken': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'soldier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'afternoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'pretti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wwe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'folk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'youtub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'skin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'emiss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'horrifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ruin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'riddanc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'premier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'feminist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'english': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'secretari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'photo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'rural': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mexican': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'asian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oppon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ireland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'drumph': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gre': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mindset': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'prick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'nocommiespleas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disrupt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'masturb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'begin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alvinuzor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'cthagod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'syllabu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xenophob': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'horribl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'thi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cornbread': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'share': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'christianfortwba': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gavin_mcinn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chrisevan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'provmagazin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plastic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ahm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'blah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'factor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'acehood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anounc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 's': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'irish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'nich': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'csulb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bwahahhahah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'outta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ensur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'daniel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gather': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'africa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'jsui': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'charl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'npr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'took': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'summer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dude': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amaz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, '2017': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'dipwad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'umich': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'legal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shadi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'spew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'answer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'realis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'snake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'bark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'ann': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dianahollin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hassan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fred': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'upris': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'log': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'settl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shareef': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'impeach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'despis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merrick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'minist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sure': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'condemn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bumpin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'weig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'polit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'commerci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hahahahah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'movin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lie': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'isol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'autopsi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jersey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'russia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'larri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'howev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'zhang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'ensu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'alwi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merkel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mdrrrrr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'immigr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'businessman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bring': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'dharna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'regist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'save': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'med': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'laird': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'age': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jokingli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'murricah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'grave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'armison': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'shawnisbae098': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'christma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'truth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plane': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'rewrit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'laizydaizey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kapernick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'leav': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ranaayyub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'common': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wisdom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seemingli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ding': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'agai': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smile': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'min': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'awww': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seller': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stream': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'uncomfort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'schadenfreud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chapo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foxnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mitchellvii': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'forget': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'great': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'agr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'humain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wtf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'compar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tough': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loui': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'post': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'legaci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'f': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gonna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bleaker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amirit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'sideshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bailamica': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'brokrift': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anvil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'relax': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eaglesyrian1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cayman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gopher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'presenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fascist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'recount': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'windsor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'sup3rfruit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'caviti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'open': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'definit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'era': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bonefid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heartbreak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'voldemort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shove': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sweetheart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'japanes': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahahah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'homophobia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'despond': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hyperbol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'extremist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mediocr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'redund': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'smh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'much4': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'colleagu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'justintrudeau': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'school': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'shelter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'statu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'breakfast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'modi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'excus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'btwn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'header': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'duplic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tran': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dial': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gluten': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pennyr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'woman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everyth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'duke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dougstanhop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reign': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'meysabieb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'altern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'televis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anecdot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'twist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sarcasm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sunpolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crazi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'morning_jo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'decis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'whoopigoldberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'choke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harvard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'isaacdkrutilla': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'climat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'instal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'corner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'skeemsaam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wilmer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'larg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'houseofcard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wing': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'diff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'opp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'left': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bigot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'month': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'clownstick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'determin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'america': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'leodicaprio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nelson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'superstar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'apropo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'star': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'women': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'gracious': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'term': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'attende': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dr_antoniad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'alan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carminezozzora': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'onli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'card': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'allegedli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'streak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'crack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'popov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tini': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tomorrow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'contact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'throne': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'collaps': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'dr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'illeg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'austin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '30pm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'diamondandsilk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'saint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'croni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'terrifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'internet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'drive': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sign': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'march': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shidddd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'deliv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'resourc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'refuge': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'firework': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trigger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'en': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'control': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gener': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'somber': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doubt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'realdonaldtrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'accent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'preach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'sunni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcflurri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'pour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ismileyciru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sensual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1st': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'riot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trtworld': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hilter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '5871': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'consequ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'sync': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'latina': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nuke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hypocrit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suffer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'the_newright': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'sinc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'dozen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'treason': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jovi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'umbridg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'typo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'elimin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dirò': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'antichrist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alexsalmond': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nawti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'mrjuanhernandez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'regain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_enyi_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'present': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zerax7': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gidi_traf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4glte': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'restaur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bomb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'eclips': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scotland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'trump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clueless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cbsthismorn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pirl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lesson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'leader': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'add': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'brought': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'h': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comedian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'devon_tracey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'culprit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'brittneyytraci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theskepticrepub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'kitchen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'visa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'christ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'engag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'partit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'club': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thumb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'disney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'paid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'fli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everywher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'minut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dedic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'billi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '7th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cruel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mountain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'space': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'form': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gravi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gomi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'aamirliaquat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bdoh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seldom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'onward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'magazin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'georgelopez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dayyyi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sexual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '0hour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whatsapp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sadli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4m': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'glasgow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'ideal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'pig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'klasrarauf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pygmi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'tail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'initi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'metaph': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'california': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'hne': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'thhi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amyschum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oscar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'robbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pattisolisdoyl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'k': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2015': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'recommend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sever': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'genocid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sandwich': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'american': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bias': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'publicli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'twitter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'conced': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rubinreport': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '21': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'improv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'late': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'undocu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'recogn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'etern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'wash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'refer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'secret': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'oreillyfactor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'movement': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'pop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'list': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'clerk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bmoore_20': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'apart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'abort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'caution': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kenya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'butt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'yesssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'matt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amidst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trolukejri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '647': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pretend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hahahaha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theme': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'misspel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'way': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lmao': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'jester': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'boug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'implic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'janinelynett': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'today': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hatefuck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'allahu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brace': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'superpow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'visec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eric': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'suicid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pie': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ostrich': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'n': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'awam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'delhi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'absurd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smoke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'salt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'youngdems4trump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'browni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'journalist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ball': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bpolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'silver': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'usa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'congratul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carolina': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'messag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'consid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '911': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abcpolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'effect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hungov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kellyannepol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'outwardli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'truck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'impart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'outdon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'whatev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johnhenrysoto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'scriptur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'south': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'racist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'dure': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overpaid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'ironi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'margot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stewart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mob': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cheney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'extrem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'di': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hogwart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'noth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'parent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fulli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'happen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doesnt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'allen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'giggl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '33': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'item': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'unearth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stage': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'land': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'abraham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'priebu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sardesairajdeep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joyvbehar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'disrespect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ambit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pathet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alluringvaus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'dream': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kutcher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'usml': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'brother': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'read': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcconnellpress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mampu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'golden': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'short': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'glorifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'noooooooooooooooooooooooooooooooooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'angri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'canadien': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'x': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dumbass': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dlc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clasuon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benoo_brown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'samanthacartel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'emo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'weneedtrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'year': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everybodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'congrt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'outsid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'watchdog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'highest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'experi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'photoshoot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alderaan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'possibl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'poland': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'just': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sisonkemsimang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'khi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chargi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'al': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boycot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'wear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'face': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'xi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'toler': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'celeb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nbcpolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'incred': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mighti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'finest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'russian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whata': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'streisand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yeh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'goodnight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scotu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '15': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '9th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scarier': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'clip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'good': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crisi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'c113': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gettin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mexico': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'buckaroo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'test': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'choos': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'displeas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abdullah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rlli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nomineetrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'elonmusk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'turkey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'frm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'goldberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'goof': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'sport': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'simpl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'abeg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coolest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'sell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'cub': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zimbabw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'complet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'powerless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lmfaoahahahahah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'neyocompound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mainstream': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'els': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'caryleepeterson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'charm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'furi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imfahadabbasi17': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'impress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'puerto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'spear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tax': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zionist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'criticis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'educ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'independ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'stupid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stephenfhay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'chicago': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'major': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'door': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'queue': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'pakistan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'muster': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'huffpo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'lower': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'contempl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'perhap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'roy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'timkain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evangel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'creep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'laughter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hectormorenco': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heaven': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'profan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'stfu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'liter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crozza': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'surpris': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'prefer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fla': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nigga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'furthermor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loyal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'couch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'commit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reveal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'dumb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'capsul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'script': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'srsli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tanzania': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'produc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dingi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'grabbin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'promis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rafay_mahmood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '16': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'expert': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hunger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'materi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unqualifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'collar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'publix': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'oak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'antiqu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'eye': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'real': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'karying': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zwraidas76': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sensibl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gasp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '45': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'sleez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'amulya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'period': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'glenn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'strongli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '9h': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'midwest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rightlady7': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'commun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'wait': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fairview': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'frickin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kevinspacey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'utterli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'strang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'confeder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'team': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mandela': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'confus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cuz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'correct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mcmullin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grace': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hampshirecolg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lifetim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'terrorist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'farrag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'v2': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mishacollin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'gitmo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'propel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nigger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crude': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'capitol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lenadunham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'electd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'narnia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'er': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'learn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'exclus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oval': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4ever': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hitler': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'berniesand': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'barbar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sharmaengi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anthoni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fogl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'fantast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unblock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'carlin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mistak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'macbook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appreci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'dey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'represent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'trummmppppppp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'center': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'big': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crush': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hotu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'haseena': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'solidifi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fnar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'categor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'indonesian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'transpar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'mein': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'handshak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scientist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'paulbegala': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'write': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'week': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'spell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'unpredict': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'princess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'togeth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'decess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bhaijafri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'startin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chubbahbubbah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ask': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crowdswer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, '17': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mermaid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'outcom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sustain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'bangin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'concept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ugliest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'junior': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fanblog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deafen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'enter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'smdh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'admin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'myth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tlt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'currenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'insan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'accord': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bata': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'nomine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'davidchalian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spuc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'annoy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'creator': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'burrito': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ethic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weapon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scandal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'timfarron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'strut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'toast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nightmar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'sustainu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'wft': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'celebr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'began': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'winter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lesbian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'exist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pornstar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mqm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'tunnel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'street': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'karn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'deer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'caus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'britain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wrestlemania': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'lord': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'iii': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'wisest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'divid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'human': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'vow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'slow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'aussi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'knoll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoodwink': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'overrid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'horn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'resid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'owner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rise': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seriou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1000': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'roll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'realli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '2008': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'select': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'safer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'congrat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'trickl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gucci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'oooooh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alternet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'huge': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'funniest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'favor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'marthamaccallum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'children': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cnn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '40': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heremi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'teri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'echo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'non': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jko417': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hater': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'cryptotweet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'consult': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'view': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mulliganj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'accomplish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unfair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'transform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'largest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'attenborough': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gasolin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'invit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'carol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'angst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'musket': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '17th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'senat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'arsen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'finna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'censor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'deni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'foxi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'right': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tufac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2024': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'befuddl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'bash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'polici': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'prioriti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ae_nv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'urgent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johann_boresch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'manipul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '000': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'twice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'connect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'game': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'terror': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'healthcar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'disgust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'popul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'maga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'temper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'surviv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'supervis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 's3tok': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hie': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'staunchest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'imrankhanpti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'thoroughfar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'sway': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'greenhous': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'markcuban': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'section': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '12': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'kain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'furiou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'immi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ck9898': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'waiv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'whiski': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'safeti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gasbag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bird': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clearest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'multipl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'let': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'irrelev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'convinc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beyoncé': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'laan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anticip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'speech': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'skynew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'peninsula': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'solac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'practis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'book': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'alrea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'ofwgkta': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unhappi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spring': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'success': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'retak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'cours': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'c': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'undertak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exampl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hahaha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disbelief': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'creepi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'muggl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'chomski': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'difficult': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grief': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'past': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'assassin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'destro': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'salti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'progress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'delhiit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'entri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stunner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'motion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'krauthamm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beneficiari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johnjpshanley': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'empir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'exchang': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soft': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'namhla': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'empower': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'moon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'concess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'urg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'express': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brittpettibon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'filthi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'tt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'fall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'lofc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'laughabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leonardo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vital': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'low': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'defeat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stockpil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'soo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'ramzpaul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'quick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'waarom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disgrac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '3pm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jasonmanford': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coverag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'absolut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'money': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'warn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'endors': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'gidi_traff': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'profil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'wom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'famou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'true': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'focu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'die': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hoor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'certainli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'baar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lord_sugar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'didn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'underwood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hmmm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'footstep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nostradamu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ellen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'janeygodley': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chef': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1776': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'atleast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'renam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'texa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gentleman': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seventi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'arriv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crimea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'farsad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'haramb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beachbodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'factori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'attack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'pound': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'purg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'observ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'puri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crowd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'michaelcohen212': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'warrior': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tragedi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'incon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '8th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'digest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'rebuild': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'viewer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'colorado': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '5m': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'submit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'justinwelbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '2016': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'worl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 's_c_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'calcul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pansuit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'belli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'baptist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benazir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'sociopath': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'price': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'disorient': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'avoid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'cher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bayanat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'andrukhovych': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'reliev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'civil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'tf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'canada': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'egregi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'hospit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scissor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coupl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'airport': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fals': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bi_bi_bihoue': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'app': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'u': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kneel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'accept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'el': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'awol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'petti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'global': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'click': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ca': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'isi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'baselessli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chief': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'magnet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'field': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'previou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'jaycosttw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ns': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lost': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'b4': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'greggutfeld': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'encash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'emascul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'viva': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hassannisar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'stock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crumbl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'screen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mrahyd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'lafz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'cornwal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'slaveri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'morningedit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'qz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'implod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'megynkelli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'busi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'feed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fraudul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fuel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'intiat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'adult': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loss': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'samantha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thrift': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'gut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'kendrawcandraw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'antar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'partner': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'anyplac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'educt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cosmomora': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bath': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'padukon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'rt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'apostl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tree': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'transfer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'inaccur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'issac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'snowflak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'dat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ohhh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'loudli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'palm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'legitimaci': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'push': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kofo_okesola': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'jihadi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oppress': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'downfal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'anti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'use': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'andy_murray': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'incompet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'calcel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'search': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'lizard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goblin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'witch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'taraf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'syrian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spiritu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '55': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scene': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'janet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'lego': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kany': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'administr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'safe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bafetimbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'boulder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'catastroph': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'citizenship': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clooney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'institut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dynasti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'maizahame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'clark': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rhythm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'umpir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'council': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'colour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'broke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shakeabl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wudda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'germani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'harvey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'err': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'scari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imjusplay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'built': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'consum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'obey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drysdal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nude': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'critlak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leftist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'msm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'liberti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'abdul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'offens': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theatric': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mav': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prophet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'split': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'revolt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meltdown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vision': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'galleri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buzz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cnnpolit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'govt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mannequuinchalleng': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'berni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'think': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zuma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weekend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'statement': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'notebook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'intellectu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'feel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thinkin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proof': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'retard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'valderrama': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'disturb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'death': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rice': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rasaqoffici': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'acquaint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cloydriv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'account': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'capit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'declar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sometim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'upstair': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vuelto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'agenda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'site': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'joke': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obuffoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theellenshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'skill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shape': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'idk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'season': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beoch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crambl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, '3': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tpp': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nobdi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reno': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'superbowl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'handcart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'default': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'czech': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'darealamberros': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, '63': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ceil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4truthandreason': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'greatli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'jazeera': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'tooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'includ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nobelpr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'segreg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'danger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'gstephanopoulo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'plenti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'discriminatori': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'crime': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'voic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'attitud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'baggag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'histor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'steadi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'atheist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'factsvsopinion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sheik': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'incit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asshat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'enjoy': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'wept': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nhlblackhawk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reveng': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'teeth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'therealdonald_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'guess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'paperwork': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'smooth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'mkantonio1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'themselv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'enda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'snap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'snaki': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'piec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'burst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'clearli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'increas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hesit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'baldwin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'antagonist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'nick_clegg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'canadian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'kobach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'support': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'centuri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'exercis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'massag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shocker': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'lmfaoooooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dr_jmrickli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lollllll': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'circular': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wordhousegil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'buzzoyepk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clesportsgirl_': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'advic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fantasi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mufti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'everythin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1459': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'meenagul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'amo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'colleg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'infrastructur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'propaganda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poroshenko': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'spotlight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'etribun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'corey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carlieelson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'pakistani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'goal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'befo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'mf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'extradit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'factum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forgot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'coincid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yourpalwil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'knew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'huug': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'emerg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'debt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'grahamlp1228': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'logannbrooke14': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'convict': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'bdutt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'machina': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shitti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '70': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'talal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'strong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carpet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'surpis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'normalis': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'challeng': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'proven': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'lipstickguru101': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'footprint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sponsor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'close': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'samuel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kevin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drudg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'absentia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'johra_12': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahmad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'monster': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'loos': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ting': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'raha': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'cupcak': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mantlepiec': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sarahpalinusa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '109': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahem': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'grip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'depor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unfortun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'fr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bonjovi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'motto': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2013': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'gov': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'newsweek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'bigotri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'traitor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rianru': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'swear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'cun': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jaw': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'natgeochannel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'follow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'steve': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'updat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'surround': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'empti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'perfect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'upgrad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fearless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'wallet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ricksantorum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reward': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'badrimg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dirti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'leas': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '4th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'benfox2212': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stop': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rage': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'its_sammysnow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'humili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'ranger': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'silenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'terribl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'earn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fuktard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'annual': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chanc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'em': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'donaldtrumpwin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ministri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sigh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bcz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'hatr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'scienc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'portray': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'roast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'bryceamburn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'sui': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tower': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'paul_kel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'inexperienc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'madison': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'facebook': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seeig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'asleep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'iraqi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'babi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2morrow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'valet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dog': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fascism': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gangal8': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'stab': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'referendum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chikhti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hotel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'milt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hole': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'elitist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'coffin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'steveaustinbsr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'rumour': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'core': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'iammgraham': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'convers': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'meaningless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dldc03': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'household': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2014': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'citi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'comrad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wsj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'advoc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'groupi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'extraodrinari': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'remind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'van': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wrote': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sykescharli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'heel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'rihanna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'path': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'breitbart': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'lmfaooooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'themess': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vickimckenna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'punch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bbcradiolondon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'liar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'entir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'urban': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mean': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'hindu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'pharo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'paint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'channel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'patrick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'champagn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'twilight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'honesti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'best': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'im': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mayb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tantrum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thelastleg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'super': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '13': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'high': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'openli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'court': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'writer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'hummer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'joffrey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pfinallyher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'racism': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'baffoon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vintag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'uphold': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'communist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lunchtim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'dicaprio': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'near': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'zackdavisson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'qaim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'station': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'faggotri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'anymor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'fleek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'ooo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sirleaf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hmm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wave': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '20': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'policybazaar_in': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thursday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'soon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'psychic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'look': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unexpect': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'invest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'feelin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vile': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'aggi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'defens': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'mani': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'public': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'jennajameson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'carlo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'misogynist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'hurt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'nation': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'senwarren': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'biko': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taco': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'strategist': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'vegan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'moron': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'billclinton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'radic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'mzansimag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kate': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reidrom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pitch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'banter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'actor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ofcours': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'simpli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hint': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'starbuck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'anybodi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'steep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'spank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ridicul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vocat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'host': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'keegan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'heard': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'word': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'flgovscott': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'rican': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, '5selfi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yage': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'insid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'comr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'girlfriend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'life': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'relationship': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'dukh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'schedul': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'slump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'korea': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'seen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'govmikehuckabe': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'imma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dishevel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fuck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'shown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'citizen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'straight': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nearest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prais': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'khuda': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'omin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fbi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'silli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 12 stored elements in Compressed Sparse Row format>, 'devot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'faith': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'point': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'indian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'champion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '________': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'euthan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'askd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'won': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'je': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'til': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'environmen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ramif': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'csydelko': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oldest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tranform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'rank': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obstruct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dialogu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bpl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'facil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wanna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vote': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'perform': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'bringin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sovereignti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 11 stored elements in Compressed Sparse Row format>, 'master': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kati': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ran': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mohal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'bay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jubil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'looney': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'adam_patt88': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'missil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'african': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lmfao': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'hopeless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'propos': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'clue': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'halftim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'notic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'victim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cloud': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'conspir': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'engin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doldebi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>, 'comfort': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'joerogan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'cop22': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dafq': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'acknowledg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'especi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'dia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'recap': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'laugh': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shift': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bbcnew': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'bishopburton': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'did': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'fiction': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prevent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'messeng': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, '08': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'equal': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'downtown': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'philadelphia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sirjadeja': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ami': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bald': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'humbl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'samiakhan183': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'asma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'z': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'despic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shock': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>, 'yr': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'courtesi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sixth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'journey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shoot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'unwant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cantar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'epicent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'interview': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'relev': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1pm': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'classi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '45th': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dig': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'typic': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'longer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chibuzor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'warmong': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'mistah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'exhaust': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'doubl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'camillususa': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'teacher': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'center4polit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vancouv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'akbar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sale': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahead': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'minnesota': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'amerika': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'health': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sorri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'plu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'virginradiopk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'root': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freez': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fruiti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'black': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'destruct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'know': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 13 stored elements in Compressed Sparse Row format>, 'o': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reclaim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tone': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'element': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'flotu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'candida': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '305': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mayopaul88': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'neighbor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'colombia': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'abo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'carri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'toomer': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jumpsuit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'beach': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shaunk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'extortion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'merryalltimelow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'wish': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dealt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'econom': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'kid': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brilliant': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nativ': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'crash': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '_iratna': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gaga': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lfc123456': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fatimahlove92': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'homepag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'explod': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'block': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'marmit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'natesilver538': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sweep': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sympathi': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'tuesday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'spectrum': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'idol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'watercolor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gloat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'pill': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, '1950': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ventura': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'weiwei': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'asl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lmaoo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'line': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'rollingitout': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'j': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '16gb': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'worst': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'luck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '2323': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'zedd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'camacho': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ban': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'taxston': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'parti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vine': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blatantli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'gentlemen': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'hope': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evolv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'suddenli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'lefti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'volatil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'oct': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'narrow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'voilenc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brexit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'russ_steinberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'race': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lifetimetv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'motorcad': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'trunk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'indoctrin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hype': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'delet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'yupper': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'yayayay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'market': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'bona': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'feet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'matter': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'wht': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 9 stored elements in Compressed Sparse Row format>, 'certain': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'negoti': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'cellar': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dukeu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'travel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nbc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pull': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'lindsay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'obbiecol': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inaugur': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'pre': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'kyknet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chriscuomo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wabantu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'thejtshow': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nois': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'process': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'golf': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'rattl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sack': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'concern': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'newli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'bed': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'score': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'prof': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ted': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '_courtney_20_x3': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'damn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shredder': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'tmz': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'ignor': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'balanc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hetero': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'historian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'satan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sunday': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mare': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'opposit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'unwav': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'theview': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'supris': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'affili': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'latim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ahora': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 4 stored elements in Compressed Sparse Row format>, 'tear': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gma': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'univers': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'fam': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'trough': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'donat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'optim': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'unmarri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dickson': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 6 stored elements in Compressed Sparse Row format>, 'mirena': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'career': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'treat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ce': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'canuck': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'brentgofftv': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, '24': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gt': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'thehil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'happend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'miser': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'afteral': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'isn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'special': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'argu': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'willballforfood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'khaniyek': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'new': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'flip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sublimin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'freind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'info': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'group': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1989': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nervous': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'virtue2004': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'contend': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'debat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'paulyeisenberg': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'khan': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'came': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'sent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'drake': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ride': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hot': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'buckl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'chente2474': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deport': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'doj': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'build': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'watch': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dislik': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'poet': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'eat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'blame': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'curiou': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'ntvkenya': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'erkel': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'misunderstood': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'scott': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'cri': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 14 stored elements in Compressed Sparse Row format>, 'imagin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ne': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shut': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nicolasturgeon': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, '1': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'peac': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'becaus': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'misogyni': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'gail': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'skip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'useless': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'evey': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nitwit': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'fashion': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'strip': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'okkk': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'dose': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jrzyjoepiscopo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'mind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'obozo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'authoris': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'dirtbag': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'timelin': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'agre': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in Compressed Sparse Row format>, 'trashmouth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'forc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'brazil': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'shall': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>, 'anyth': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'jahalat': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, '800': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'inshallah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'wast': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'idc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, '1991': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'hell': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Row format>, 'trevornoah': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sick': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'glibli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'ganguli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'infact': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'repres': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'afford': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'mankind': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'livekelli': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'vike': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'order': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>, 'william': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 't': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'appl': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'godd': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'convent': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'quo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'reinc': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'biggest': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'nigerian': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 5 stored elements in Compressed Sparse Row format>, 'apn': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 7 stored elements in Compressed Sparse Row format>, 'therealdonaldtrump': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'deejay': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>, 'sobodwo': <1x4931 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>}


Definicao do numero de clusters
Fazendo a clusterizacao...
Colunas da base:
['id_original', 'data', 'usuario', 'localizacao', 'texto', 'cluster']


Quantos textos por cluster:
1    25422
3     7178
0      845
6      569
5      464
2      371
8      306
4      267
7      198
9      160
Name: cluster, dtype: int64


Agrupados!
(0,                                        id_original             data  \
796326596873506817  Wed Nov 09 12:20:30 +0000 2016     Daffi_is_you   
796326686337990656  Wed Nov 09 12:20:51 +0000 2016     TakeThatSalk   
796326687210426368  Wed Nov 09 12:20:51 +0000 2016    notsydvicious   
796326936951848960  Wed Nov 09 12:21:51 +0000 2016        Spidee_DD   
796327136562937856  Wed Nov 09 12:22:39 +0000 2016    thatgirldiane   
796327149313622016  Wed Nov 09 12:22:42 +0000 2016      Amyfurlongg   
796327149510725632  Wed Nov 09 12:22:42 +0000 2016      raulislas15   
796327187565727744  Wed Nov 09 12:22:51 +0000 2016           tilned   
796327244083957760  Wed Nov 09 12:23:04 +0000 2016  MaryHardman1971   
796327322089463809  Wed Nov 09 12:23:23 +0000 2016     maddyisalive   
796327423205896193  Wed Nov 09 12:23:47 +0000 2016    mrintegrity13   
796327470664445952  Wed Nov 09 12:23:58 +0000 2016    KylieMonroe11   
796327523399401472  Wed Nov 09 12:24:11 +0000 2016    propitiouslwt   
796327584619298818  Wed Nov 09 12:24:25 +0000 2016  BrianSalmonella   
796327654433718272  Wed Nov 09 12:24:42 +0000 2016     LissaLaneous   
796327681403088896  Wed Nov 09 12:24:48 +0000 2016      Andrea_1014   
796328159956336641  Wed Nov 09 12:26:43 +0000 2016       mschris_si   
796328205913362432  Wed Nov 09 12:26:54 +0000 2016          Sxgesse   
796328266227470336  Wed Nov 09 12:27:08 +0000 2016    dianalorenaaa   
796328323655811073  Wed Nov 09 12:27:22 +0000 2016        AquaMillo   
796328344719622145  Wed Nov 09 12:27:27 +0000 2016    childoflight4   
796328417339830272  Wed Nov 09 12:27:44 +0000 2016       _UriSarang   
796328433362014208  Wed Nov 09 12:27:48 +0000 2016    iamjeanjordan   
796328593781444608  Wed Nov 09 12:28:26 +0000 2016     ArijDiampuan   
796328707082375168  Wed Nov 09 12:28:53 +0000 2016  georgia_graceee   
796328764963753985  Wed Nov 09 12:29:07 +0000 2016       BijouSayss   
796329087908401152  Wed Nov 09 12:30:24 +0000 2016    brittneyreeed   
796329404632797184  Wed Nov 09 12:31:39 +0000 2016          iamdryx   
796329409234038784  Wed Nov 09 12:31:40 +0000 2016  andrewleslie_15   
796329501839896577  Wed Nov 09 12:32:02 +0000 2016     ixirameninaj   
...                                            ...              ...   
796487182403928064  Wed Nov 09 22:58:36 +0000 2016  monica_roberts5   
796487196513603584  Wed Nov 09 22:58:40 +0000 2016  Croque_Monsieur   
796488280128835595  Wed Nov 09 23:02:58 +0000 2016     GlennManeval   
796489510473388032  Wed Nov 09 23:07:52 +0000 2016       sawilcox28   
796489547400052737  Wed Nov 09 23:08:00 +0000 2016      chickenf1sh   
796490169109151744  Wed Nov 09 23:10:29 +0000 2016         po_loony   
796490486273994752  Wed Nov 09 23:11:44 +0000 2016       majordeark   
796490685344006144  Wed Nov 09 23:12:32 +0000 2016   quantastarfire   
796490701160599552  Wed Nov 09 23:12:35 +0000 2016   fernxndomxrtnz   
796490938293964800  Wed Nov 09 23:13:32 +0000 2016         jazzyjrw   
796491470274494464  Wed Nov 09 23:15:39 +0000 2016     DeshunBaxter   
796492542938259456  Wed Nov 09 23:19:55 +0000 2016   LastChronicles   
796493084162985984  Wed Nov 09 23:22:04 +0000 2016  healthygirlkate   
796493130124107776  Wed Nov 09 23:22:15 +0000 2016   TobyIsTerrible   
796494624428699648  Wed Nov 09 23:28:11 +0000 2016           PKaru9   
796495137975234560  Wed Nov 09 23:30:13 +0000 2016  roblesnadjuntas   
796496411768582144  Wed Nov 09 23:35:17 +0000 2016      mckenzie_37   
796496472405463040  Wed Nov 09 23:35:31 +0000 2016      darinpost34   
796496840703082496  Wed Nov 09 23:36:59 +0000 2016   colorful_flaws   
796497528837574657  Wed Nov 09 23:39:43 +0000 2016    KatelynBliss1   
796497535535718400  Wed Nov 09 23:39:45 +0000 2016    kathyorozco25   
796497949069082624  Wed Nov 09 23:41:23 +0000 2016  arcobalenietnei   
796499573837590528  Wed Nov 09 23:47:51 +0000 2016   Directorwebber   
796499717484146692  Wed Nov 09 23:48:25 +0000 2016       MazurekRob   
796499763294248960  Wed Nov 09 23:48:36 +0000 2016       LeeEllis82   
796500043180244992  Wed Nov 09 23:49:43 +0000 2016    MurphyLillian   
796500746439012352  Wed Nov 09 23:52:30 +0000 2016          sue3859   
796501687208972288  Wed Nov 09 23:56:15 +0000 2016  saradav21047146   
796501799167401984  Wed Nov 09 23:56:41 +0000 2016          mcabain   
796502343214919680  Wed Nov 09 23:58:51 +0000 2016          mkues65   

                                           usuario  \
796326596873506817          Paese delle Meraviglie   
796326686337990656                            None   
796326687210426368                         Buffalo   
796326936951848960                            None   
796327136562937856                       St. Louis   
796327149313622016                     Dublin City   
796327149510725632                             mty   
796327187565727744                       Nederland   
796327244083957760                       Mansfield   
796327322089463809                       Bengaluru   
796327423205896193                            None   
796327470664445952                          Peoria   
796327523399401472                            None   
796327584619298818                      Montebello   
796327654433718272                        Smalbany   
796327681403088896                         Chicago   
796328159956336641                     San Antonio   
796328205913362432                          France   
796328266227470336                         Houston   
796328323655811073                            mora   
796328344719622145  My Youtube Channel down below.   
796328417339830272                julieisoverparty   
796328433362014208                         Jamaica   
796328593781444608                          Jeddah   
796328707082375168                      Tuscaloosa   
796328764963753985                        Red Bank   
796329087908401152                           Maine   
796329404632797184                  Loading... 25%   
796329409234038784                      Greenfield   
796329501839896577                             MNL   
...                                            ...   
796487182403928064                            None   
796487196513603584                          Nevada   
796488280128835595                         Florida   
796489510473388032                         Vermont   
796489547400052737                      North West   
796490169109151744                          Rennes   
796490486273994752                            None   
796490685344006144                         Ontario   
796490701160599552                          Nevada   
796490938293964800                        Canberra   
796491470274494464                            None   
796492542938259456                   United States   
796493084162985984                          London   
796493130124107776                            None   
796494624428699648                      Chatsworth   
796495137975234560                             USA   
796496411768582144                      livingston   
796496472405463040                       Middleton   
796496840703082496                       San Diego   
796497528837574657                   United States   
796497535535718400                       Livermore   
796497949069082624                         Sicilia   
796499573837590528                      Des Moines   
796499717484146692                          Canada   
796499763294248960                         Georgia   
796500043180244992                            None   
796500746439012352                            None   
796501687208972288                            None   
796501799167401984                       Vancouver   
796502343214919680                            Ohio   

                                                      localizacao  \
796326596873506817                             happy hunger games   
796326686337990656                  i would make a political joke   
796326687210426368                                             NY   
796326936951848960                             happy hunger games   
796327136562937856                                             MO   
796327149313622016                                        Ireland   
796327149510725632                                             mx   
796327187565727744                                      meanwhile   
796327244083957760                                             TX   
796327322089463809                                      Karnataka   
796327423205896193                                       too late   
796327470664445952                                             IL   
796327523399401472                  i would make a political joke   
796327584619298818                                             CA   
796327654433718272                                             NY   
796327681403088896                                             IL   
796328159956336641                                          Texas   
796328205913362432                             happy hunger games   
796328266227470336                                             TX   
796328323655811073                                      meanwhile   
796328344719622145                                   hey liberals   
796328417339830272                             happy hunger games   
796328433362014208                                      meanwhile   
796328593781444608                        Kingdom of Saudi Arabia   
796328707082375168                                             AL   
796328764963753985                                             NJ   
796329087908401152                                            USA   
796329404632797184                  i would make a political joke   
796329409234038784                                             IN   
796329501839896577                                             PH   
...                                                           ...   
796487182403928064        the 45th president of the united states   
796487196513603584                                            USA   
796488280128835595                                            USA   
796489510473388032                                            USA   
796489547400052737                                        England   
796490169109151744                                        France.   
796490486273994752                                      meanwhile   
796490685344006144                                         Canada   
796490701160599552                                            USA   
796490938293964800                                      Australia   
796491470274494464  trump was smart enough to run as a republican   
796492542938259456                                     november 9   
796493084162985984                                        England   
796493130124107776       @gyubrows  -  - dude just let it all out   
796494624428699648                                     California   
796495137975234560                                        america   
796496411768582144                                            al    
796496472405463040                                             ID   
796496840703082496                                             CA   
796497528837574657                  i would make a political joke   
796497535535718400                                             CA   
796497949069082624                                        america   
796499573837590528                                             IA   
796499717484146692                                        america   
796499763294248960                                            USA   
796500043180244992                                        america   
796500746439012352                                        america   
796501687208972288                                        america   
796501799167401984                                           B.C.   
796502343214919680                                            USA   

                                                                texto  cluster  
796326596873506817          and may the odds be ever in your favour.         0  
796326686337990656   but it would just end up being elected presid...        0  
796326687210426368  only white people in america will tell you rac...        0  
796326936951848960          and may the odds be ever in your favour.         0  
796327136562937856  only white people in america will tell you rac...        0  
796327149313622016  president trump is proof that u can never trus...        0  
796327149510725632  president trump is proof that u can never trus...        0  
796327187565727744                         at the top of trump tower         0  
796327244083957760  congratulations to president donald trump! may...        0  
796327322089463809  trump or hillary. either way the u.s are fucked.         0  
796327423205896193   obama is already president and clinton almost...        0  
796327470664445952  @realdonaldtrump  donald trump is our 45th pre...        0  
796327523399401472   but it would just end up being elected presid...        0  
796327584619298818  only white people in america will tell you rac...        0  
796327654433718272  only white people in america will tell you rac...        0  
796327681403088896  only white people in america will tell you rac...        0  
796328159956336641  i'd make a political joke but it would just en...        0  
796328205913362432          and may the odds be ever in your favour.         0  
796328266227470336  only white people in america will tell you rac...        0  
796328323655811073                         at the top of trump tower         0  
796328344719622145          get used to saying president trump! -  -         0  
796328417339830272          and may the odds be ever in your favour.         0  
796328433362014208                         at the top of trump tower         0  
796328593781444608  only white people in america will tell you rac...        0  
796328707082375168  only white people in america will tell you rac...        0  
796328764963753985  only white people in america will tell you rac...        0  
796329087908401152  only white people in america will tell you rac...        0  
796329404632797184   but it would just end up being elected presid...        0  
796329409234038784  donald trump is the 45th president of the unit...        0  
796329501839896577  only white people in america will tell you rac...        0  
...                                                               ...      ...  
796487182403928064                                  donald j. trump!         0  
796487196513603584                on the election of donald j trump.         0  
796488280128835595  the empire state building honoring president e...        0  
796489510473388032                on the election of donald j trump.         0  
796489547400052737                on the election of donald j trump.         0  
796490169109151744  donald trump is the oldest man ever to take of...        0  
796490486273994752                         at the top of trump tower         0  
796490685344006144                on the election of donald j trump.         0  
796490701160599552  the empire state building honoring president e...        0  
796490938293964800                on the election of donald j trump.         0  
796491470274494464   because he knew he would win the election and...        0  
796492542938259456   2016- prophecy news part 1  -  - donald trump...        0  
796493084162985984  i just can't get my head around donald trump n...        0  
796493130124107776         just like your love for president trump -         0  
796494624428699648  people underestimate how important this electi...        0  
796495137975234560   introducing president-elect donald j &amp; fi...        0  
796496411768582144  'trump could never be president' wait.. what w...        0  
796496472405463040  what other president had songs about himself b...        0  
796496840703082496      you all got played  by president-elect trump         0  
796497528837574657   but it would just end up being elected presid...        0  
796497535535718400  the empire state building honoring president e...        0  
796497949069082624   introducing president-elect donald j &amp; fi...        0  
796499573837590528  the empire state building honoring president e...        0  
796499717484146692   introducing president-elect donald j &amp; fi...        0  
796499763294248960  happy trump day @tugcowart @donaldjtrumpjr @tr...        0  
796500043180244992   introducing president-elect donald j &amp; fi...        0  
796500746439012352   introducing president-elect donald j &amp; fi...        0  
796501687208972288   introducing president-elect donald j &amp; fi...        0  
796501799167401984                on the election of donald j trump.         0  
796502343214919680  the empire state building honoring president e...        0  

[845 rows x 6 columns]) ; texto
(1,                                        id_original             data  \
796326558143279104  Wed Nov 09 12:20:21 +0000 2016       kzilkofski   
796326492011659264  Wed Nov 09 12:20:05 +0000 2016          AmyS_95   
796326560882192384  Wed Nov 09 12:20:21 +0000 2016          ahusila   
796326563621076992  Wed Nov 09 12:20:22 +0000 2016    thagriershugs   
796326565017567232  Wed Nov 09 12:20:22 +0000 2016       marianagi_   
796326567328804864  Wed Nov 09 12:20:23 +0000 2016         neyhilah   
796326566833823744  Wed Nov 09 12:20:23 +0000 2016       Smithy0391   
796326578045075456  Wed Nov 09 12:20:25 +0000 2016    ZulaikhaMumin   
796326579345489920  Wed Nov 09 12:20:26 +0000 2016          tanzeth   
796326583418159104  Wed Nov 09 12:20:27 +0000 2016          ItzGOOX   
796326587138473985  Wed Nov 09 12:20:28 +0000 2016    jayvon_bixxch   
796326588409413632  Wed Nov 09 12:20:28 +0000 2016        _elizamar   
796326592804978688  Wed Nov 09 12:20:29 +0000 2016          Phan313   
796326594105274368  Wed Nov 09 12:20:29 +0000 2016      MisPakistan   
796326603181522944  Wed Nov 09 12:20:31 +0000 2016         ipannn97   
796326606436495360  Wed Nov 09 12:20:32 +0000 2016   bravehearttawy   
796326609674530817  Wed Nov 09 12:20:33 +0000 2016    findingREEEMo   
796326611750703104  Wed Nov 09 12:20:33 +0000 2016       eashaalkhn   
796326614070153216  Wed Nov 09 12:20:34 +0000 2016        okayerika   
796326615378755584  Wed Nov 09 12:20:34 +0000 2016     Dgrabowski01   
796326619430486016  Wed Nov 09 12:20:35 +0000 2016        angevliam   
796326623679234052  Wed Nov 09 12:20:36 +0000 2016       jurekbohun   
796326624870416384  Wed Nov 09 12:20:37 +0000 2016  itsafilthyworld   
796326627399630849  Wed Nov 09 12:20:37 +0000 2016      MeganWellls   
796326628334899200  Wed Nov 09 12:20:37 +0000 2016     SidneySinCam   
796326632885604352  Wed Nov 09 12:20:38 +0000 2016      parthi_sims   
796326633540096002  Wed Nov 09 12:20:39 +0000 2016        zilpatel_   
796326638099238912  Wed Nov 09 12:20:40 +0000 2016   MolotovFlicker   
796326640641052672  Wed Nov 09 12:20:40 +0000 2016         yo_lyss_   
796326640892735492  Wed Nov 09 12:20:40 +0000 2016   PassionnTweets   
...                                            ...              ...   
796501959066861568  Wed Nov 09 23:57:19 +0000 2016       bandstunts   
796501971519815681  Wed Nov 09 23:57:22 +0000 2016      1StormCrow1   
796501973956755456  Wed Nov 09 23:57:23 +0000 2016          saymasq   
796502057029173248  Wed Nov 09 23:57:43 +0000 2016        smfsesouv   
796502083608477696  Wed Nov 09 23:57:49 +0000 2016          toarazs   
796502084703158272  Wed Nov 09 23:57:49 +0000 2016     Chas768Chuck   
796502166085238784  Wed Nov 09 23:58:09 +0000 2016    artosazamqlat   
796502189833338880  Wed Nov 09 23:58:15 +0000 2016  roughliterature   
796502192685543424  Wed Nov 09 23:58:15 +0000 2016      neidel_gina   
796502208552534016  Wed Nov 09 23:58:19 +0000 2016           qcstar   
796502218941796352  Wed Nov 09 23:58:21 +0000 2016          A13Khan   
796502229423423493  Wed Nov 09 23:58:24 +0000 2016     matihargrove   
796502247681171456  Wed Nov 09 23:58:28 +0000 2016   dcashamozgovah   
796502256401182720  Wed Nov 09 23:58:30 +0000 2016         OtunbaYM   
796502259706236928  Wed Nov 09 23:58:31 +0000 2016           lucgll   
796502267650306048  Wed Nov 09 23:58:33 +0000 2016         sharir_b   
796502341864357889  Wed Nov 09 23:58:51 +0000 2016     ennylacoster   
796502361346895872  Wed Nov 09 23:58:55 +0000 2016  elmirasaunders2   
796502389540945920  Wed Nov 09 23:59:02 +0000 2016    simplyrockyr5   
796502404275572736  Wed Nov 09 23:59:06 +0000 2016     thegoobatron   
796502405302996992  Wed Nov 09 23:59:06 +0000 2016        R2D290679   
796502422709563394  Wed Nov 09 23:59:10 +0000 2016         e_rock01   
796502423334428673  Wed Nov 09 23:59:10 +0000 2016     Shepardchris   
796502432721358852  Wed Nov 09 23:59:12 +0000 2016        VHEXAUDIO   
796502462895099908  Wed Nov 09 23:59:20 +0000 2016       AngelaAqui   
796502463574671360  Wed Nov 09 23:59:20 +0000 2016  HippieChick2525   
796502491743588352  Wed Nov 09 23:59:26 +0000 2016        JmyersDph   
796502497443639296  Wed Nov 09 23:59:28 +0000 2016    beesknees1960   
796502530939179008  Wed Nov 09 23:59:36 +0000 2016      MasukePlays   
796502593862246400  Wed Nov 09 23:59:51 +0000 2016   iliana_nkwonta   

                                 usuario  \
796326558143279104                  None   
796326492011659264     Fleetwood/Preston   
796326560882192384               yeryüzü   
796326563621076992                  None   
796326565017567232                  None   
796326567328804864                  None   
796326566833823744                  None   
796326578045075456                brunei   
796326579345489920                  None   
796326583418159104                  None   
796326587138473985                  None   
796326588409413632                  None   
796326592804978688                  None   
796326594105274368         In your Heart   
796326603181522944                  None   
796326606436495360              Thunder⚡   
796326609674530817                  None   
796326611750703104  Misfit In This World   
796326614070153216                  None   
796326615378755584        east coast 617   
796326619430486016            05.11.15 ♡   
796326623679234052                  None   
796326624870416384                  None   
796326627399630849                Suisse   
796326628334899200           united tits   
796326632885604352        Trichirappalli   
796326633540096002               Florida   
796326638099238912       Washington D.C.   
796326640641052672                  None   
796326640892735492                  None   
...                                  ...   
796501959066861568          maria gianna   
796501971519815681                  None   
796501973956755456                  None   
796502057029173248                  None   
796502083608477696                  None   
796502084703158272        arrived stoned   
796502166085238784                  None   
796502189833338880                   NaN   
796502192685543424                  None   
796502208552534016                Canada   
796502218941796352                  None   
796502229423423493                  None   
796502247681171456                  None   
796502256401182720                 Lagos   
796502259706236928        East coast USA   
796502267650306048                    Fl   
796502341864357889                 Lagos   
796502361346895872                  None   
796502389540945920                  None   
796502404275572736                  None   
796502405302996992         my safe space   
796502422709563394               Houston   
796502423334428673                  None   
796502432721358852                  None   
796502462895099908                Bogotá   
796502463574671360                  None   
796502491743588352                  None   
796502497443639296           los angeles   
796502530939179008                  None   
796502593862246400                  None   

                                                          localizacao texto  \
796326558143279104  trump didn't win. racism won. sexism won. hate...   NaN   
796326492011659264                looks like he was right after all.    NaN   
796326560882192384                                                NaN   NaN   
796326563621076992  trump didn't win. racism won. sexism won. hate...   NaN   
796326565017567232  trump didn't win. racism won. sexism won. hate...   NaN   
796326567328804864  i swear to god simpsons is full on illuminati....   NaN   
796326566833823744  started off as a funny joke &amp; has now beco...   NaN   
796326578045075456  trump didn't win. racism won. sexism won. hate...   NaN   
796326579345489920               sorry america!! :( we feel for you!    NaN   
796326583418159104  trump didn't win. racism won. sexism won. hate...   NaN   
796326587138473985  started off as a funny joke &amp; has now beco...   NaN   
796326588409413632  only white people in america will tell you rac...   NaN   
796326592804978688  hate won. fear won. racism won. sexism won. ho...   NaN   
796326594105274368  guy catches girlfriend cheating when she sexts...   NaN   
796326603181522944                looks like he was right after all.    NaN   
796326606436495360  i swear to god simpsons is full on illuminati....   NaN   
796326609674530817  only white people in america will tell you rac...   NaN   
796326611750703104           @khanaghaa  - plz suggest him something    NaN   
796326614070153216                                                NaN   NaN   
796326615378755584               sorry america!! :( we feel for you!    NaN   
796326619430486016  racism won. - sexism won. - hatred won. - fear...   NaN   
796326623679234052  i swear to god simpsons is full on illuminati....   NaN   
796326624870416384  only white people in america will tell you rac...   NaN   
796326627399630849  only white people in america will tell you rac...   NaN   
796326628334899200                      i'm still mad. but. ok fine.    NaN   
796326632885604352                                  who did this?  -    NaN   
796326633540096002                looks like he was right after all.    NaN   
796326638099238912                     this is where we are in life:    NaN   
796326640641052672  only white people in america will tell you rac...   NaN   
796326640892735492  damn he really said that shit out his mouth si...   NaN   
...                                                               ...   ...   
796501959066861568  i think america wont have a better and brighte...   NaN   
796501971519815681                                                NaN   NaN   
796501973956755456                                             -  -     NaN   
796502057029173248  verdict of the day: a great cv can only get yo...   NaN   
796502083608477696  verdict of the day: a great cv can only get yo...   NaN   
796502084703158272  to all you who talked trash:  you'd let him gr...   NaN   
796502166085238784  verdict of the day: a great cv can only get yo...   NaN   
796502189833338880                                                NaN   NaN   
796502192685543424              to all the deplorables! we did it!!!    NaN   
796502208552534016                                   and so it is!!!    NaN   
796502218941796352                looks like he was right after all.    NaN   
796502229423423493                           i will tell my children    NaN   
796502247681171456  verdict of the day: a great cv can only get yo...   NaN   
796502256401182720  special congrats to @specialkmb1969 and @kayle...   NaN   
796502259706236928                                          keepcalm    NaN   
796502267650306048  one of our first priorities should be removing...   NaN   
796502341864357889  dear @basket_mouth  please stay true to your p...   NaN   
796502361346895872  verdict of the day: a great cv can only get yo...   NaN   
796502389540945920                                       @rylandsabs    NaN   
796502404275572736  these hillary supporters need to get a grip of...   NaN   
796502405302996992                 literally happiest day of my life    NaN   
796502422709563394                                                NaN   NaN   
796502423334428673                              sign just erected at    NaN   
796502432721358852  a man who can't handle his own twitter account...   NaN   
796502462895099908          looks like he was right about this one!!    NaN   
796502463574671360  all those stunned and shocked at trump live in...   NaN   
796502491743588352  hahahhaha think they will flee??? we will see!!!    NaN   
796502497443639296  the empire state building honoring president e...   NaN   
796502530939179008  trump didn't win. racism won. sexism won. hate...   NaN   
796502593862246400  verdict of the day: a great cv can only get yo...   NaN   

                    cluster  
796326558143279104        1  
796326492011659264        1  
796326560882192384        1  
796326563621076992        1  
796326565017567232        1  
796326567328804864        1  
796326566833823744        1  
796326578045075456        1  
796326579345489920        1  
796326583418159104        1  
796326587138473985        1  
796326588409413632        1  
796326592804978688        1  
796326594105274368        1  
796326603181522944        1  
796326606436495360        1  
796326609674530817        1  
796326611750703104        1  
796326614070153216        1  
796326615378755584        1  
796326619430486016        1  
796326623679234052        1  
796326624870416384        1  
796326627399630849        1  
796326628334899200        1  
796326632885604352        1  
796326633540096002        1  
796326638099238912        1  
796326640641052672        1  
796326640892735492        1  
...                     ...  
796501959066861568        1  
796501971519815681        1  
796501973956755456        1  
796502057029173248        1  
796502083608477696        1  
796502084703158272        1  
796502166085238784        1  
796502189833338880        1  
796502192685543424        1  
796502208552534016        1  
796502218941796352        1  
796502229423423493        1  
796502247681171456        1  
796502256401182720        1  
796502259706236928        1  
796502267650306048        1  
796502341864357889        1  
796502361346895872        1  
796502389540945920        1  
796502404275572736        1  
796502405302996992        1  
796502422709563394        1  
796502423334428673        1  
796502432721358852        1  
796502462895099908        1  
796502463574671360        1  
796502491743588352        1  
796502497443639296        1  
796502530939179008        1  
796502593862246400        1  

[25422 rows x 6 columns]) ; texto
(2,                                        id_original             data  \
796326695448018944  Wed Nov 09 12:20:53 +0000 2016         _C2liaV_   
796326746874400768  Wed Nov 09 12:21:06 +0000 2016           _04Cam   
796326783054397440  Wed Nov 09 12:21:14 +0000 2016           Roc_SS   
796326905314209792  Wed Nov 09 12:21:43 +0000 2016       hezhitters   
796327282436673536  Wed Nov 09 12:23:13 +0000 2016     ZeyadBeshara   
796327481234096128  Wed Nov 09 12:24:01 +0000 2016        MalieeMal   
796328319369314304  Wed Nov 09 12:27:21 +0000 2016       ABraggs_26   
796328325010640896  Wed Nov 09 12:27:22 +0000 2016       tannerwag4   
796328606813265920  Wed Nov 09 12:28:29 +0000 2016           Xxaire   
796328908496859136  Wed Nov 09 12:29:41 +0000 2016        Julissaa_   
796328932719128576  Wed Nov 09 12:29:47 +0000 2016        JValdez7_   
796328965069766656  Wed Nov 09 12:29:55 +0000 2016   Loudpacknelson   
796329112449196032  Wed Nov 09 12:30:30 +0000 2016  brunadcarvalhoa   
796329523142868993  Wed Nov 09 12:32:08 +0000 2016  MariamMHassan13   
796329642206445568  Wed Nov 09 12:32:36 +0000 2016  shdhdhfjdhdhjjd   
796329887921487872  Wed Nov 09 12:33:35 +0000 2016      Joel28Perez   
796330558917922817  Wed Nov 09 12:36:15 +0000 2016    Gabrielle_Dbr   
796330692678471680  Wed Nov 09 12:36:46 +0000 2016      hayl3yjon3s   
796331592650080257  Wed Nov 09 12:40:21 +0000 2016      rounythique   
796332115726049280  Wed Nov 09 12:42:26 +0000 2016     verdantroses   
796332245699166208  Wed Nov 09 12:42:57 +0000 2016         _xoKayla   
796332793634680832  Wed Nov 09 12:45:07 +0000 2016   TheBest_Chrono   
796332892985167872  Wed Nov 09 12:45:31 +0000 2016       linaqalaba   
796333015584702465  Wed Nov 09 12:46:00 +0000 2016   Deacon_Crocker   
796333145528434688  Wed Nov 09 12:46:31 +0000 2016        Chiallola   
796333324759420928  Wed Nov 09 12:47:14 +0000 2016        fishflo13   
796333507891105793  Wed Nov 09 12:47:58 +0000 2016        tt2shifty   
796333937706549248  Wed Nov 09 12:49:40 +0000 2016        Fpsplaila   
796334337537015808  Wed Nov 09 12:51:15 +0000 2016       CBtheJoker   
796335701277241345  Wed Nov 09 12:56:41 +0000 2016     JanetMefferd   
...                                            ...              ...   
796436964589391872  Wed Nov 09 19:39:04 +0000 2016       MANGROWN77   
796436971765846016  Wed Nov 09 19:39:05 +0000 2016      behavingbad   
796437431860002820  Wed Nov 09 19:40:55 +0000 2016       INN0VATIVE   
796437526151999488  Wed Nov 09 19:41:17 +0000 2016           HTD_38   
796437725801021441  Wed Nov 09 19:42:05 +0000 2016         joysalah   
796437828867653632  Wed Nov 09 19:42:30 +0000 2016    WhereDEMat_24   
796437931330306048  Wed Nov 09 19:42:54 +0000 2016     biankasophia   
796437979170537475  Wed Nov 09 19:43:05 +0000 2016    kennedylynn31   
796438123811078144  Wed Nov 09 19:43:40 +0000 2016      Mx3_Kaaayla   
796438395165802496  Wed Nov 09 19:44:45 +0000 2016        ajprotege   
796438575525068801  Wed Nov 09 19:45:28 +0000 2016  chrismondragon_   
796438661759987713  Wed Nov 09 19:45:48 +0000 2016       gabaroman_   
796439606090727432  Wed Nov 09 19:49:33 +0000 2016         SosooBtr   
796440877551927296  Wed Nov 09 19:54:37 +0000 2016  HanifCheAmdilah   
796443050549637120  Wed Nov 09 20:03:15 +0000 2016          moudji7   
796443356767387652  Wed Nov 09 20:04:28 +0000 2016  crystamartinez_   
796444863021645828  Wed Nov 09 20:10:27 +0000 2016       TMSKiDoeee   
796444925906845698  Wed Nov 09 20:10:42 +0000 2016       TMSKiDoeee   
796479171501367297  Wed Nov 09 22:26:47 +0000 2016       9596_bulls   
796482523555631108  Wed Nov 09 22:40:06 +0000 2016         toniey_r   
796485718486884352  Wed Nov 09 22:52:47 +0000 2016  lovsHazandLarry   
796486653355311104  Wed Nov 09 22:56:30 +0000 2016     TheYologator   
796487873423810560  Wed Nov 09 23:01:21 +0000 2016  Marco__Santiago   
796488014516092928  Wed Nov 09 23:01:55 +0000 2016      nahar_akkad   
796488019096326148  Wed Nov 09 23:01:56 +0000 2016  Trefuckintorres   
796488282951585792  Wed Nov 09 23:02:59 +0000 2016  thereal_selman_   
796488823228207104  Wed Nov 09 23:05:08 +0000 2016      HanyElzayed   
796491316997722112  Wed Nov 09 23:15:02 +0000 2016       masamunext   
796494605218877440  Wed Nov 09 23:28:06 +0000 2016       KaiLeafwon   
796501674340786176  Wed Nov 09 23:56:12 +0000 2016          BH2600q   

                                      usuario                   localizacao  \
796326695448018944                     Cannes                        France   
796326746874400768                      Bronx                            NY   
796326783054397440                New Orleans                            LA   
796326905314209792                   Michigan                           USA   
796327282436673536                Alexandria                        Egypt .   
796327481234096128                    Georgia                           USA   
796328319369314304                  Charlotte                            NC   
796328325010640896                      Paris                        France   
796328606813265920                 Washington                            DC   
796328908496859136                 California                           USA   
796328932719128576                   Freeport                            TX   
796328965069766656                   Virginia                           USA   
796329112449196032                   Barcelos                      Portugal   
796329523142868993                    Toronto                       Ontario   
796329642206445568                Apra Harbor                           USA   
796329887921487872                   Lawrence                            MA   
796330558917922817                     London                       England   
796330692678471680                    Chicago                            IL   
796331592650080257             Lapu-Lapu City               Central Visayas   
796332115726049280                   Maryland                           USA   
796332245699166208                  Aguadilla                   Puerto Rico   
796332793634680832                    Gorizia         Friuli-Venezia Giulia   
796332892985167872                     Jeddah       Kingdom of Saudi Arabia   
796333015584702465                      Dover                            DE   
796333145528434688        Peschiera del Garda                        Veneto   
796333324759420928                     Athens                            AL   
796333507891105793                   Virginia                           USA   
796333937706549248                      Amman   Hashemite Kingdom of Jordan   
796334337537015808                     Peoria                            IL   
796335701277241345                       None      the hottest of hot takes   
...                                       ...                           ...   
796436964589391872                  Arlington                            tx   
796436971765846016                     Jeddah       Kingdom of Saudi Arabia   
796437431860002820                     Austin                            TX   
796437526151999488                     Renton                            WA   
796437725801021441                     Beirut                       Lebanon   
796437828867653632                    Indiana                           USA   
796437931330306048                    Houston                            TX   
796437979170537475                 Washington                            DC   
796438123811078144                      Omaha                            NE   
796438395165802496                  Rochester                            MN   
796438575525068801                       Kyle                            TX   
796438661759987713                      Cupey           Puerto Rico / Enca    
796439606090727432                      Paris                 Ile-de-France   
796440877551927296                    Kemaman                    Terengganu   
796443050549637120                  Manhattan                            NY   
796443356767387652         South Padre Island                            TX   
796444863021645828                 Washington                            DC   
796444925906845698                 Washington                            DC   
796479171501367297                    Chicago                            IL   
796482523555631108                   Carolina                            PR   
796485718486884352                    Jacumba                            CA   
796486653355311104                        ASU                            AZ   
796487873423810560                  trapvilla                            az   
796488014516092928              San Francisco                            CA   
796488019096326148                   Victoria                            TX   
796488282951585792                 San Marcos                            TX   
796488823228207104                  mansoura                          Egypt   
796491316997722112                     Sendai                        Miyagi   
796494605218877440  high somewhere in Chicago                           IL    
796501674340786176                      Devon                      England    

                                                         texto  cluster  
796326695448018944   looks like he was right about this one!!         2  
796326746874400768         looks like he was right after all.         2  
796326783054397440   looks like he was right about this one!!         2  
796326905314209792         looks like he was right after all.         2  
796327282436673536   looks like he was right about this one!!         2  
796327481234096128         looks like he was right after all.         2  
796328319369314304                         right right right.         2  
796328325010640896         looks like he was right after all.         2  
796328606813265920   looks like he was right about this one!!         2  
796328908496859136  looks like he was right about this one!!!         2  
796328932719128576   looks like he was right about this one!!         2  
796328965069766656         looks like he was right after all.         2  
796329112449196032   looks like he was right about this one!!         2  
796329523142868993   looks like he was right about this one!!         2  
796329642206445568   looks like he was right about this one!!         2  
796329887921487872   looks like he was right about this one!!         2  
796330558917922817   looks like he was right about this one!!         2  
796330692678471680         looks like he was right after all.         2  
796331592650080257         looks like he was right after all.         2  
796332115726049280         looks like he was right after all.         2  
796332245699166208         looks like he was right after all.         2  
796332793634680832   looks like he was right about this one!!         2  
796332892985167872   looks like he was right about this one!!         2  
796333015584702465         looks like he was right after all.         2  
796333145528434688   looks like he was right about this one!!         2  
796333324759420928   looks like he was right about this one!!         2  
796333507891105793         looks like he was right after all.         2  
796333937706549248  looks like he was right about this one!!!         2  
796334337537015808         looks like he was right after all.         2  
796335701277241345                                right here.         2  
...                                                        ...      ...  
796436964589391872   looks like he was right about this one!!         2  
796436971765846016   looks like he was right about this one!!         2  
796437431860002820         looks like he was right after all.         2  
796437526151999488   looks like he was right about this one!!         2  
796437725801021441   looks like he was right about this one!!         2  
796437828867653632         looks like he was right after all.         2  
796437931330306048         looks like he was right after all.         2  
796437979170537475   looks like he was right about this one!!         2  
796438123811078144   looks like he was right about this one!!         2  
796438395165802496   looks like he was right about this one!!         2  
796438575525068801   looks like he was right about this one!!         2  
796438661759987713   looks like he was right about this one!!         2  
796439606090727432   looks like he was right about this one!!         2  
796440877551927296   looks like he was right about this one!!         2  
796443050549637120   looks like he was right about this one!!         2  
796443356767387652   looks like he was right about this one!!         2  
796444863021645828   looks like he was right about this one!!         2  
796444925906845698   looks like he was right about this one!!         2  
796479171501367297   looks like he was right about this one!!         2  
796482523555631108         looks like he was right after all.         2  
796485718486884352  looks like he was right about this one!!!         2  
796486653355311104         looks like he was right after all.         2  
796487873423810560         looks like he was right after all.         2  
796488014516092928   looks like he was right about this one!!         2  
796488019096326148         looks like he was right after all.         2  
796488282951585792         looks like he was right after all.         2  
796488823228207104   looks like he was right about this one!!         2  
796491316997722112         looks like he was right after all.         2  
796494605218877440         looks like he was right after all.         2  
796501674340786176   looks like he was right about this one!!         2  

[371 rows x 6 columns]) ; texto
(3,                                        id_original             data  \
796326556423450624  Wed Nov 09 12:20:20 +0000 2016           lexctn   
796326556796944390  Wed Nov 09 12:20:20 +0000 2016        neilhelks   
796326587876655104  Wed Nov 09 12:20:28 +0000 2016   ArsiChaudhry17   
796326666071117824  Wed Nov 09 12:20:46 +0000 2016     stephenoflyf   
796326671301361665  Wed Nov 09 12:20:48 +0000 2016  TitansArrow1488   
796326688883752960  Wed Nov 09 12:20:52 +0000 2016  SsWIwTDJRlMQ4K9   
796326710836862976  Wed Nov 09 12:20:57 +0000 2016         kaykaur3   
796326751404228608  Wed Nov 09 12:21:07 +0000 2016     Yung_Neilson   
796326774644887552  Wed Nov 09 12:21:12 +0000 2016         sj121969   
796326782169452544  Wed Nov 09 12:21:14 +0000 2016   itsallaboutlea   
796326794920075264  Wed Nov 09 12:21:17 +0000 2016   olwethumthathi   
796326797868728320  Wed Nov 09 12:21:18 +0000 2016  ananetflixbooks   
796326805326196736  Wed Nov 09 12:21:20 +0000 2016   Ana_Kathleen14   
796326806504804352  Wed Nov 09 12:21:20 +0000 2016       owura_safo   
796326826620633089  Wed Nov 09 12:21:25 +0000 2016       J_Dubbbb96   
796326853447401472  Wed Nov 09 12:21:31 +0000 2016       J_Dubbbb96   
796326863438127105  Wed Nov 09 12:21:33 +0000 2016     nevethedemon   
796326867297075200  Wed Nov 09 12:21:34 +0000 2016   FloridaBoyAlan   
796326877916971009  Wed Nov 09 12:21:37 +0000 2016          salatzo   
796326899626557441  Wed Nov 09 12:21:42 +0000 2016    muhammadazack   
796326904152358912  Wed Nov 09 12:21:43 +0000 2016     frenzychilly   
796326939619364864  Wed Nov 09 12:21:52 +0000 2016        damnclown   
796326942110810112  Wed Nov 09 12:21:52 +0000 2016    anendinmyself   
796326960238473216  Wed Nov 09 12:21:57 +0000 2016           a77pdl   
796326980195151873  Wed Nov 09 12:22:01 +0000 2016      r4chhhhhh__   
796327025795538944  Wed Nov 09 12:22:12 +0000 2016          CocoILH   
796327045244534784  Wed Nov 09 12:22:17 +0000 2016     msAmandaZOUK   
796327105961271297  Wed Nov 09 12:22:31 +0000 2016       Abeee_odun   
796327114844803072  Wed Nov 09 12:22:33 +0000 2016     Damo_Wolfpaw   
796327186856808448  Wed Nov 09 12:22:51 +0000 2016          somarai   
...                                            ...              ...   
796501038865870848  Wed Nov 09 23:53:40 +0000 2016         JLUhlman   
796501224455446528  Wed Nov 09 23:54:24 +0000 2016  CharlesLaurenc8   
796501240549019648  Wed Nov 09 23:54:28 +0000 2016         azrider1   
796501244051230720  Wed Nov 09 23:54:29 +0000 2016    kathyorozco25   
796501382232702978  Wed Nov 09 23:55:02 +0000 2016     HillaryAtkin   
796501542136320000  Wed Nov 09 23:55:40 +0000 2016          slewfan   
796501549572833282  Wed Nov 09 23:55:42 +0000 2016   IrishTexan2009   
796501645773406208  Wed Nov 09 23:56:05 +0000 2016      Tayson_matt   
796501661069950977  Wed Nov 09 23:56:08 +0000 2016       NagrathRob   
796501705705791489  Wed Nov 09 23:56:19 +0000 2016       Margie1820   
796501711116496896  Wed Nov 09 23:56:20 +0000 2016    rocketsales44   
796501739344011264  Wed Nov 09 23:56:27 +0000 2016    brittneyy_xxv   
796501763562074112  Wed Nov 09 23:56:33 +0000 2016          GymMint   
796501775494893568  Wed Nov 09 23:56:36 +0000 2016     Holly25Marie   
796501789910695936  Wed Nov 09 23:56:39 +0000 2016        JasonDaxx   
796501990767546369  Wed Nov 09 23:57:27 +0000 2016        miffedchi   
796502056869560320  Wed Nov 09 23:57:43 +0000 2016    Jessparsons04   
796502075630878720  Wed Nov 09 23:57:47 +0000 2016         k4rlzs4m   
796502097642618880  Wed Nov 09 23:57:53 +0000 2016       joepayton1   
796502104512888832  Wed Nov 09 23:57:54 +0000 2016       Azalea5560   
796502177283854337  Wed Nov 09 23:58:12 +0000 2016         chantyxc   
796502184099741696  Wed Nov 09 23:58:13 +0000 2016       Sdonna361W   
796502195344723968  Wed Nov 09 23:58:16 +0000 2016       EstebanHRZ   
796502284477878272  Wed Nov 09 23:58:37 +0000 2016    reallyedbaker   
796502366191239168  Wed Nov 09 23:58:57 +0000 2016   dottingtheeyes   
796502408201469953  Wed Nov 09 23:59:07 +0000 2016   RickDrummond92   
796502447468539904  Wed Nov 09 23:59:16 +0000 2016  realDonaldTrust   
796502483694559232  Wed Nov 09 23:59:25 +0000 2016       bfraser747   
796502567941525504  Wed Nov 09 23:59:45 +0000 2016      Nitegammer_   
796502588355149824  Wed Nov 09 23:59:50 +0000 2016       RichandGod   

                                    usuario  \
796326556423450624         snap/ig: @lexctn   
796326556796944390                Yorkshire   
796326587876655104       steps ahead of you   
796326666071117824                My house.   
796326671301361665                   Smyrna   
796326688883752960                NEW DELHI   
796326710836862976               Birmingham   
796326751404228608                     None   
796326774644887552               Noonecares   
796326782169452544                     None   
796326794920075264           Port Elizabeth   
796326797868728320               Somewhere    
796326805326196736                 New York   
796326806504804352         Bantama - Kumasi   
796326826620633089               San Marcos   
796326853447401472               San Marcos   
796326863438127105          the black house   
796326867297075200                 Mandarin   
796326877916971009                  Norwalk   
796326899626557441                Gemencheh   
796326904152358912                     None   
796326939619364864                out there   
796326942110810112             Mid Atlantic   
796326960238473216                Kathmandu   
796326980195151873                   Dudley   
796327025795538944                   Torino   
796327045244534784                   Cannes   
796327105961271297                    Lagos   
796327114844803072  C:/Germany/Bavaria/Home   
796327186856808448                    Dubai   
...                                     ...   
796501038865870848                  Atlanta   
796501224455446528             Port Hueneme   
796501240549019648                     None   
796501244051230720                Livermore   
796501382232702978              Los Angeles   
796501542136320000                      USA   
796501549572833282   scuba diving somewhere   
796501645773406208                 Oklahoma   
796501661069950977                     None   
796501705705791489                    Texas   
796501711116496896               Boca Raton   
796501739344011264               California   
796501763562074112               Evansville   
796501775494893568                     None   
796501789910695936         Great U.S OF A!    
796501990767546369                  Toronto   
796502056869560320                 Victoria   
796502075630878720                  Toronto   
796502097642618880            Mechanicsburg   
796502104512888832            Wesley Chapel   
796502177283854337    teetering at the edge   
796502184099741696                     None   
796502195344723968                New Haven   
796502284477878272                     None   
796502366191239168              orange park   
796502408201469953                     Ohio   
796502447468539904                 New York   
796502483694559232       Pacific North West   
796502567941525504                     None   
796502588355149824          Twitter church    

                                                          localizacao  \
796326556423450624                                    woah there mate   
796326556796944390                                                 UK   
796326587876655104                                   thankyou america   
796326666071117824                       being the underdog is sweet    
796326671301361665                                                 TN   
796326688883752960                                        DERA  BUGTI   
796326710836862976                                                 UK   
796326751404228608  the vp wanted to get rid of gay marriage not t...   
796326774644887552                                                 OO   
796326782169452544                   britain: brexit is the stupidest   
796326794920075264                                       South Africa   
796326797868728320  american just elected the combination of volde...   
796326805326196736                                                USA   
796326806504804352                                              Ghana   
796326826620633089                                                 TX   
796326853447401472                                                 TX   
796326863438127105  american just elected the combination of volde...   
796326867297075200                                                 FL   
796326877916971009                                                Ct.   
796326899626557441                                    Negeri Sembilan   
796326904152358912  it's unbelievable but when trump won the repub...   
796326939619364864                                       let me guess   
796326942110810112                                                USA   
796326960238473216                                              Nepal   
796326980195151873                                            England   
796327025795538944                                           Piemonte   
796327045244534784                                                 FR   
796327105961271297                                           Nigeria.   
796327114844803072  it saddens me that young people in america wil...   
796327186856808448                               United Arab Emirates   
...                                                               ...   
796501038865870848                                                 GA   
796501224455446528                                                 CA   
796501240549019648  if i go for a run with my american flag this m...   
796501244051230720                                                 CA   
796501382232702978                                                 CA   
796501542136320000                i don't like trump. i love him. yep   
796501549572833282  i will chip in too for samuel jackson &amp; mi...   
796501645773406208                                                USA   
796501661069950977  just love how 'surprised' media &amp; left r w...   
796501705705791489                                                USA   
796501711116496896                                            Florida   
796501739344011264                                                USA   
796501763562074112                                                 IN   
796501775494893568       thanks be to god  my first good nights sleep   
796501789910695936  if i go for a run with my american flag this m...   
796501990767546369                                            Ontario   
796502056869560320                                          Australia   
796502075630878720                                                 ON   
796502097642618880                                                 PA   
796502104512888832                                            Florida   
796502177283854337  it saddens me that young people in america wil...   
796502184099741696                                dear united nations   
796502195344723968                                              Conn.   
796502284477878272                                              oh no   
796502366191239168                                                 fl   
796502408201469953                                                USA   
796502447468539904                                                 NY   
796502483694559232  just love how 'surprised' media &amp; left r w...   
796502567941525504  just love how 'surprised' media &amp; left r w...   
796502588355149824                                     New Jerusalem    

                                                                texto  cluster  
796326556423450624   i never new youre rooting for a homophobic an...        3  
796326556796944390  just some inspiring words from some inspiring ...        3  
796326587876655104   now i wont be able to sleep knowing a maniac ...        3  
796326666071117824                   especially when you finally win         3  
796326671301361665             oh it's all gone quiet over there...          3  
796326688883752960                    pm @narendramodi congratulated         3  
796326710836862976                                    what a year...         3  
796326751404228608                                              it'…         3  
796326774644887552  it is great to wake up and think that now the ...        3  
796326782169452544   most self-destructive act a country could und...        3  
796326794920075264  @kanyewest please run for next president bro -...        3  
796326797868728320                           umbridge and lockhart -         3  
796326805326196736                               this must be a joke         3  
796326806504804352  @sarkodie is doing it fast fast before @acehoo...        3  
796326826620633089  elections are over -  - counting is completed ...        3  
796326853447401472                     if everyone is surprised that         3  
796326863438127105                           umbridge and lockhart -         3  
796326867297075200  such a great feeling waking up knowing i won't...        3  
796326877916971009  distraught @hillaryclinton supporters search f...        3  
796326899626557441                                     usa be like:          3  
796326904152358912              i knew it wasn't a joking something.         3  
796326939619364864   ted cruz now doesn't have a problem confirmin...        3  
796326942110810112                             will we be denied the         3  
796326960238473216                             the whole day through         3  
796326980195151873  did not expect to wake up to that news this mo...        3  
796327025795538944            wake me up when those four years end.          3  
796327045244534784  when ur not an american but u feel devastated ...        3  
796327105961271297          this guy didn't get this right this time         3  
796327114844803072         sexism and homophobia will 'make you grea…        3  
796327186856808448  and that is how t. b. joshua officially declar...        3  
...                                                               ...      ...  
796501038865870848            @mileycyrus got your bags packed yet?          3  
796501224455446528  one of our first priorities should be removing...        3  
796501240549019648   is that rubbing it in? -  - i don't want to b...        3  
796501244051230720  bye! you cant leave quick enough feel free to ...        3  
796501382232702978                      i predict a huge increase in         3  
796501542136320000     i've never been a groupie and now is my time.         3  
796501549572833282                                i want to keep him         3  
796501645773406208               jamaican man explains why trump won         3  
796501661069950977                                     me) yrs ago.…         3  
796501705705791489  @theview @ravensymone @lifetimetv enjoy canada...        3  
796501711116496896  i don't want to rub it in too much but these s...        3  
796501739344011264  the 'peaceful and tolerant left' that 'never c...        3  
796501763562074112  the world knows trump is a good thing. stocks ...        3  
796501775494893568                      nightmare free in 18 months!         3  
796501789910695936   is that rubbing it in? -  - i don't want to b...        3  
796501990767546369              to all the deplorables! we did it!!!         3  
796502056869560320                     glad that i live in australia         3  
796502075630878720                                              this         3  
796502097642618880  the world knows trump is a good thing. stocks ...        3  
796502104512888832  for everyone who said 'no one likes trump!' gu...        3  
796502177283854337          sexism and homophobia will 'make you gre…        3  
796502184099741696   - your lease is up. - pack your shit and get ...        3  
796502195344723968                                         new haven         3  
796502284477878272                                                           3  
796502366191239168                               my thoughts on this         3  
796502408201469953                                     where are the         3  
796502447468539904  nigeria is a beautiful city. i will surely be ...        3  
796502483694559232                                     me) yrs ago.…         3  
796502567941525504                                     me) yrs ago.…         3  
796502588355149824  this is what america looks like from the air lol         3  

[7178 rows x 6 columns]) ; texto
(4,                                        id_original             data  \
796326660798869505  Wed Nov 09 12:20:45 +0000 2016     KIANA_LYRICS   
796327041041911808  Wed Nov 09 12:22:16 +0000 2016        GettiGina   
796327095706255360  Wed Nov 09 12:22:29 +0000 2016       _nikkie36_   
796327223536078848  Wed Nov 09 12:22:59 +0000 2016   JasmineBlancoo   
796327248710209536  Wed Nov 09 12:23:05 +0000 2016     LOLA_ADEDEJI   
796327256377458689  Wed Nov 09 12:23:07 +0000 2016  brianamayorga02   
796327383297048576  Wed Nov 09 12:23:37 +0000 2016       FatimaM_07   
796327470052081665  Wed Nov 09 12:23:58 +0000 2016   Sheyla99_Queen   
796327589799456768  Wed Nov 09 12:24:27 +0000 2016       malaskumar   
796327658376179712  Wed Nov 09 12:24:43 +0000 2016  SelenatorRtweet   
796327713300680708  Wed Nov 09 12:24:56 +0000 2016       MrsMakhele   
796327758058192896  Wed Nov 09 12:25:07 +0000 2016      lasclxjapus   
796327805764194304  Wed Nov 09 12:25:18 +0000 2016         SamDiaz_   
796327813573808128  Wed Nov 09 12:25:20 +0000 2016          ioumail   
796327998265978880  Wed Nov 09 12:26:04 +0000 2016        flexxxing   
796328350113497088  Wed Nov 09 12:27:28 +0000 2016       SeguraMadi   
796328379792424960  Wed Nov 09 12:27:35 +0000 2016   _Dreamchasing_   
796328420409896961  Wed Nov 09 12:27:45 +0000 2016      srirejeki56   
796328462273351680  Wed Nov 09 12:27:55 +0000 2016     JustinLang99   
796328558666727425  Wed Nov 09 12:28:18 +0000 2016  JEDnotJadJidJud   
796328602040233984  Wed Nov 09 12:28:28 +0000 2016  theylovebrookie   
796328657392455680  Wed Nov 09 12:28:41 +0000 2016     MariaTalpos1   
796328683774603264  Wed Nov 09 12:28:47 +0000 2016      deepujaanu1   
796328728796106752  Wed Nov 09 12:28:58 +0000 2016     GopalCharlie   
796328885763850240  Wed Nov 09 12:29:36 +0000 2016     in_band_land   
796328982086094848  Wed Nov 09 12:29:59 +0000 2016   victorialj1908   
796329035580264448  Wed Nov 09 12:30:11 +0000 2016  ABA_alkhulaifi_   
796329430151004160  Wed Nov 09 12:31:45 +0000 2016      BELLALIFIAN   
796329703611265024  Wed Nov 09 12:32:51 +0000 2016    BlackRose7196   
796330197947740164  Wed Nov 09 12:34:48 +0000 2016       _Kiriannaa   
...                                            ...              ...   
796416334594768896  Wed Nov 09 18:17:05 +0000 2016         MatjTheo   
796417107521110020  Wed Nov 09 18:20:09 +0000 2016    aquariusluv17   
796417609616990209  Wed Nov 09 18:22:09 +0000 2016       Breezy2K01   
796418032897703936  Wed Nov 09 18:23:50 +0000 2016     NIKICORTEZ02   
796418044465651712  Wed Nov 09 18:23:53 +0000 2016    ShimungaiSlim   
796419147563462656  Wed Nov 09 18:28:16 +0000 2016     aubramariebb   
796419438358589441  Wed Nov 09 18:29:25 +0000 2016  DonRondoEsquire   
796419627953729536  Wed Nov 09 18:30:10 +0000 2016   MissionClarity   
796420296156872704  Wed Nov 09 18:32:50 +0000 2016     erin_long101   
796420917358313473  Wed Nov 09 18:35:18 +0000 2016      ultraawaave   
796421025164623876  Wed Nov 09 18:35:43 +0000 2016     SouARainhaMa   
796421234032459776  Wed Nov 09 18:36:33 +0000 2016          motek42   
796421406833709056  Wed Nov 09 18:37:14 +0000 2016       mykpoproad   
796421457689661440  Wed Nov 09 18:37:26 +0000 2016      JennJenn563   
796421849626222592  Wed Nov 09 18:39:00 +0000 2016       debjgreen1   
796423030436233216  Wed Nov 09 18:43:41 +0000 2016       cf2islands   
796437528022806528  Wed Nov 09 19:41:18 +0000 2016   ToxicFighterSB   
796438516733509637  Wed Nov 09 19:45:14 +0000 2016       IAMHankPal   
796438845046845441  Wed Nov 09 19:46:32 +0000 2016  followsthestars   
796439356323950592  Wed Nov 09 19:48:34 +0000 2016     joannatovar_   
796440502555938816  Wed Nov 09 19:53:07 +0000 2016  Itsyahhgirllety   
796441221413515264  Wed Nov 09 19:55:59 +0000 2016    melaniemena14   
796442263849205783  Wed Nov 09 20:00:07 +0000 2016  ShakeitoffHenry   
796443121030725640  Wed Nov 09 20:03:31 +0000 2016    Badgalkaylaaa   
796444485869830149  Wed Nov 09 20:08:57 +0000 2016        juke7vlcm   
796444625930223616  Wed Nov 09 20:09:30 +0000 2016         cbrunk78   
796480350964875264  Wed Nov 09 22:31:28 +0000 2016       fitality95   
796493780690026496  Wed Nov 09 23:24:50 +0000 2016       M0chalatt3   
796496481603776514  Wed Nov 09 23:35:34 +0000 2016       DrDeanKyne   
796497829674024963  Wed Nov 09 23:40:55 +0000 2016       FlyJubilee   

                                     usuario  \
796326660798869505                   Atlanta   
796327041041911808                New Jersey   
796327095706255360                  New York   
796327223536078848                     Miami   
796327248710209536                  Coventry   
796327256377458689                     Texas   
796327383297048576                    Ottawa   
796327470052081665                      Lima   
796327589799456768                  New York   
796327658376179712               Los Angeles   
796327713300680708            ÜT: -26.115347   
796327758058192896                 Santorini   
796327805764194304               Springfield   
796327813573808128                 Tehachapi   
796327998265978880                 St. Louis   
796328350113497088                Mandeville   
796328379792424960                     Flint   
796328420409896961                   gombong   
796328462273351680     Margot Robbie's heart   
796328558666727425               Quezon City   
796328602040233984                   Houston   
796328657392455680                  Bistriţa   
796328683774603264                   القاهرة   
796328728796106752                 New Delhi   
796328885763850240                   Orlando   
796328982086094848               Mississippi   
796329035580264448                      Doha   
796329430151004160              CKRG-DPK-JKT   
796329703611265024                    Queens   
796330197947740164               New Orleans   
...                                      ...   
796416334594768896  Porthcawl  / Bournemouth   
796417107521110020                  Maryland   
796417609616990209               Los Angeles   
796418032897703936                    Austin   
796418044465651712                   Nairobi   
796419147563462656                Pittsburgh   
796419438358589441                    Nevada   
796419627953729536                 Vacaville   
796420296156872704                      Cork   
796420917358313473                   Menifee   
796421025164623876                  Lewiston   
796421234032459776                California   
796421406833709056                      None   
796421457689661440               San Antonio   
796421849626222592                Washington   
796423030436233216                 Nashville   
796437528022806528                   Seattle   
796438516733509637               Los Angeles   
796438845046845441                  New York   
796439356323950592                California   
796440502555938816                      Reno   
796441221413515264                   Passaic   
796442263849205783                      None   
796443121030725640                  New York   
796444485869830149       Newcastle Upon Tyne   
796444625930223616                  Maryland   
796480350964875264                   Orlando   
796493780690026496                Louisville   
796496481603776514                   McAllen   
796497829674024963                  Colorado   

                                                          localizacao  \
796326660798869505                                                 GA   
796327041041911808                                                USA   
796327095706255360                                                USA   
796327223536078848                                                 FL   
796327248710209536                                            England   
796327256377458689                                                USA   
796327383297048576                                                 ON   
796327470052081665                                               Peru   
796327589799456768                                                 NY   
796327658376179712                                                 CA   
796327713300680708                                          28.049203   
796327758058192896                                             Greece   
796327805764194304                                                 MA   
796327813573808128                                                 CA   
796327998265978880                                           Missouri   
796328350113497088                                                 LA   
796328379792424960                                                 MI   
796328420409896961                                        jawa tengah   
796328462273351680  all those who are still upset about the electi...   
796328558666727425                                         Philipines   
796328602040233984                                                 TX   
796328657392455680                                            România   
796328683774603264                                                مصر   
796328728796106752                                              India   
796328885763850240                                                Fl.   
796328982086094848                                                USA   
796329035580264448                                              Qatar   
796329430151004160                                          Indonesia   
796329703611265024                                           New York   
796330197947740164                                                 LA   
...                                                               ...   
796416334594768896                   so happy to be british right now   
796417107521110020                                                USA   
796417609616990209                                                 CA   
796418032897703936                                                 TX   
796418044465651712                                                      
796419147563462656                                                 PA   
796419438358589441                                                USA   
796419627953729536                                         California   
796420296156872704                                            Ireland   
796420917358313473                                                 CA   
796421025164623876                                                 ME   
796421234032459776                                                USA   
796421406833709056                                     my condolences   
796421457689661440                                                 TX   
796421849626222592                                                USA   
796423030436233216                                                 TN   
796437528022806528                                                 WA   
796438516733509637                                                 CA   
796438845046845441                                                 NY   
796439356323950592                                                USA   
796440502555938816                                                 NV   
796441221413515264                                                 NJ   
796442263849205783                                     my condolences   
796443121030725640                                                 NY   
796444485869830149                                            England   
796444625930223616                                                USA   
796480350964875264                                                 FL   
796493780690026496                                                 KY   
796496481603776514                                                 TX   
796497829674024963                                                USA   

                                                            texto  cluster  
796326660798869505           sorry america!! :( we feel for you!         4  
796327041041911808           sorry america!! :( we feel for you!         4  
796327095706255360           sorry america!! :( we feel for you!         4  
796327223536078848           sorry america!! :( we feel for you!         4  
796327248710209536           sorry america!! :( we feel for you!         4  
796327256377458689           sorry america!! :( we feel for you!         4  
796327383297048576           sorry america!! :( we feel for you!         4  
796327470052081665           sorry america!! :( we feel for you!         4  
796327589799456768           sorry america!! :( we feel for you!         4  
796327658376179712           sorry america!! :( we feel for you!         4  
796327713300680708           sorry america!! :( we feel for you!         4  
796327758058192896           sorry america!! :( we feel for you!         4  
796327805764194304           sorry america!! :( we feel for you!         4  
796327813573808128           sorry america!! :( we feel for you!         4  
796327998265978880           sorry america!! :( we feel for you!         4  
796328350113497088           sorry america!! :( we feel for you!         4  
796328379792424960           sorry america!! :( we feel for you!         4  
796328420409896961           sorry america!! :( we feel for you!         4  
796328462273351680   nothing you can do about it sorry not sorry         4  
796328558666727425           sorry america!! :( we feel for you!         4  
796328602040233984           sorry america!! :( we feel for you!         4  
796328657392455680           sorry america!! :( we feel for you!         4  
796328683774603264           sorry america!! :( we feel for you!         4  
796328728796106752           sorry america!! :( we feel for you!         4  
796328885763850240           sorry america!! :( we feel for you!         4  
796328982086094848           sorry america!! :( we feel for you!         4  
796329035580264448           sorry america!! :( we feel for you!         4  
796329430151004160           sorry america!! :( we feel for you!         4  
796329703611265024           sorry america!! :( we feel for you!         4  
796330197947740164           sorry america!! :( we feel for you!         4  
...                                                           ...      ...  
796416334594768896                                 sorry america         4  
796417107521110020           sorry america!! :( we feel for you!         4  
796417609616990209           sorry america!! :( we feel for you!         4  
796418032897703936           sorry america!! :( we feel for you!         4  
796418044465651712           sorry america!! :( we feel for you!         4  
796419147563462656           sorry america!! :( we feel for you!         4  
796419438358589441           sorry america!! :( we feel for you!         4  
796419627953729536           sorry america!! :( we feel for you!         4  
796420296156872704           sorry america!! :( we feel for you!         4  
796420917358313473           sorry america!! :( we feel for you!         4  
796421025164623876           sorry america!! :( we feel for you!         4  
796421234032459776           sorry america!! :( we feel for you!         4  
796421406833709056                                      america.         4  
796421457689661440           sorry america!! :( we feel for you!         4  
796421849626222592           sorry america!! :( we feel for you!         4  
796423030436233216           sorry america!! :( we feel for you!         4  
796437528022806528           sorry america!! :( we feel for you!         4  
796438516733509637           sorry america!! :( we feel for you!         4  
796438845046845441           sorry america!! :( we feel for you!         4  
796439356323950592           sorry america!! :( we feel for you!         4  
796440502555938816           sorry america!! :( we feel for you!         4  
796441221413515264           sorry america!! :( we feel for you!         4  
796442263849205783                                      america.         4  
796443121030725640           sorry america!! :( we feel for you!         4  
796444485869830149           sorry america!! :( we feel for you!         4  
796444625930223616           sorry america!! :( we feel for you!         4  
796480350964875264           sorry america!! :( we feel for you!         4  
796493780690026496           sorry america!! :( we feel for you!         4  
796496481603776514           sorry america!! :( we feel for you!         4  
796497829674024963           sorry america!! :( we feel for you!         4  

[267 rows x 6 columns]) ; texto
(5,                                        id_original             data  \
796326628813053953  Wed Nov 09 12:20:37 +0000 2016   KallyElizabeth   
796326732370505728  Wed Nov 09 12:21:02 +0000 2016    flavorsevents   
796327126668574721  Wed Nov 09 12:22:36 +0000 2016  alphonse_kyallo   
796327146839048192  Wed Nov 09 12:22:41 +0000 2016           llsg__   
796327151448576001  Wed Nov 09 12:22:42 +0000 2016    Luelidania_10   
796327091247742976  Wed Nov 09 12:22:28 +0000 2016  jessicahuston59   
796327196239347712  Wed Nov 09 12:22:53 +0000 2016          romx_zz   
796327453534732289  Wed Nov 09 12:23:54 +0000 2016         siggster   
796327640214990848  Wed Nov 09 12:24:39 +0000 2016       PvtAmazing   
796327701699293185  Wed Nov 09 12:24:53 +0000 2016     adnancheema3   
796327888102551552  Wed Nov 09 12:25:38 +0000 2016         rmi__pti   
796328099977842688  Wed Nov 09 12:26:28 +0000 2016       itzayanajm   
796328147348291584  Wed Nov 09 12:26:40 +0000 2016          Catt200   
796328170869915650  Wed Nov 09 12:26:45 +0000 2016          JoeBobP   
796328234807869441  Wed Nov 09 12:27:00 +0000 2016    Louie_Monarch   
796328402013851648  Wed Nov 09 12:27:40 +0000 2016  shahzaibshake03   
796328723830231040  Wed Nov 09 12:28:57 +0000 2016      marcusasand   
796328725965115392  Wed Nov 09 12:28:57 +0000 2016       sardartabi   
796328809570172928  Wed Nov 09 12:29:17 +0000 2016      reginagatti   
796328833771151361  Wed Nov 09 12:29:23 +0000 2016        kyrie2516   
796328833754333185  Wed Nov 09 12:29:23 +0000 2016      IngWCambero   
796329114898747392  Wed Nov 09 12:30:30 +0000 2016      StarInGreen   
796329182095622147  Wed Nov 09 12:30:46 +0000 2016        chaaimaee   
796329191482490884  Wed Nov 09 12:30:48 +0000 2016  harryjamesneil_   
796329198466068480  Wed Nov 09 12:30:50 +0000 2016  SheldonjohnDias   
796329349091688448  Wed Nov 09 12:31:26 +0000 2016       zephyr1345   
796330219267354624  Wed Nov 09 12:34:54 +0000 2016      aazambhutto   
796330228494794752  Wed Nov 09 12:34:56 +0000 2016        drluckeee   
796330278713171968  Wed Nov 09 12:35:08 +0000 2016      Broda_Gokay   
796330433113944065  Wed Nov 09 12:35:45 +0000 2016   Venezolana1998   
...                                            ...              ...   
796416766784262144  Wed Nov 09 18:18:48 +0000 2016       Elinor1127   
796416967330643968  Wed Nov 09 18:19:36 +0000 2016     MissAmandaSC   
796417187582013440  Wed Nov 09 18:20:28 +0000 2016  charadesofyouth   
796418285705236481  Wed Nov 09 18:24:50 +0000 2016   loufookinlosah   
796418389011005441  Wed Nov 09 18:25:15 +0000 2016        hassaniqb   
796419397506236422  Wed Nov 09 18:29:15 +0000 2016   waheedshahid73   
796419810888450051  Wed Nov 09 18:30:54 +0000 2016       jimbostj15   
796420114472140800  Wed Nov 09 18:32:06 +0000 2016          Epic_NJ   
796420335281184770  Wed Nov 09 18:32:59 +0000 2016   shoaibayyaz012   
796420940427128832  Wed Nov 09 18:35:23 +0000 2016           tulo69   
796421633741357056  Wed Nov 09 18:38:08 +0000 2016        Cowboy_43   
796421931536941060  Wed Nov 09 18:39:19 +0000 2016    TwisttedLogic   
796422056535527424  Wed Nov 09 18:39:49 +0000 2016       beingslman   
796422109585096704  Wed Nov 09 18:40:02 +0000 2016     Kingfish7777   
796422271091019776  Wed Nov 09 18:40:40 +0000 2016     melinasilva_   
796422950035607552  Wed Nov 09 18:43:22 +0000 2016         LeBenj86   
796422992121237504  Wed Nov 09 18:43:32 +0000 2016     DebMeinhardt   
796440184325865486  Wed Nov 09 19:51:51 +0000 2016       dar2iphone   
796443312886579205  Wed Nov 09 20:04:17 +0000 2016     pratikwasnik   
796443516515840000  Wed Nov 09 20:05:06 +0000 2016      aliciaaaeve   
796443676280897537  Wed Nov 09 20:05:44 +0000 2016  PetreeDominique   
796444875432591363  Wed Nov 09 20:10:30 +0000 2016       qureshisab   
796479078543032320  Wed Nov 09 22:26:24 +0000 2016            krflz   
796482043777581061  Wed Nov 09 22:38:11 +0000 2016   ian_rentschler   
796489601103908865  Wed Nov 09 23:08:13 +0000 2016            lso45   
796491548338831360  Wed Nov 09 23:15:57 +0000 2016         FePhia23   
796492986167296000  Wed Nov 09 23:21:40 +0000 2016        Cordicity   
796496590592622592  Wed Nov 09 23:36:00 +0000 2016       jasminepxx   
796497327787831296  Wed Nov 09 23:38:55 +0000 2016   laurie_paolone   
796499645409136640  Wed Nov 09 23:48:08 +0000 2016      __zahraasal   

                                                              usuario  \
796326628813053953                                              NOLA    
796326732370505728                                             London   
796327126668574721                                           MACHAKOS   
796327146839048192                                              Paris   
796327151448576001                                             Lisboa   
796327091247742976                                      Littlehampton   
796327196239347712                                          อ.หนองฉาง   
796327453534732289                                          Asheville   
796327640214990848                                     West Hollywood   
796327701699293185                                              Sindh   
796327888102551552                                              لاہور   
796328099977842688                                          Woodstock   
796328147348291584                                     Castelo Branco   
796328170869915650                                            US of A   
796328234807869441                                   Over The Rainbow   
796328402013851648                                            Karachi   
796328723830231040                                          København   
796328725965115392                                         Rawalpindi   
796328809570172928                                           New York   
796328833771151361  Floating around the Inner Rings of Saturn.  Ea...   
796328833754333185                                      ÜT: 18.451597   
796329114898747392                                               Oslo   
796329182095622147                                               None   
796329191482490884                                            England   
796329198466068480                                            Sharjah   
796329349091688448                                              Tokyo   
796330219267354624                                    Hyderabad sindh   
796330228494794752                                             Multan   
796330278713171968                                            Nigeria   
796330433113944065                         ¡vivo para honrarte papa!    
...                                                               ...   
796416766784262144                                      North Olmsted   
796416967330643968                                            Crawley   
796417187582013440                                        Baton Rouge   
796418285705236481                        What happened in Wellington   
796418389011005441                                             London   
796419397506236422                                             Lahore   
796419810888450051                                      St. Johnsbury   
796420114472140800                                           Pretoria   
796420335281184770                                کھوئیرٹہ آزاد کشمیر   
796420940427128832                                               Rome   
796421633741357056                                            Houston   
796421931536941060                                               None   
796422056535527424                                            Karachi   
796422109585096704                                          Pineville   
796422271091019776                                               None   
796422950035607552                                    Fort Lauderdale   
796422992121237504                                               Wade   
796440184325865486                                      Boynton Beach   
796443312886579205                                           Bilaspur   
796443516515840000                                         Warrington   
796443676280897537                                          Vancouver   
796444875432591363                                          Sheffield   
796479078543032320                                               None   
796482043777581061                                      Columbia City   
796489601103908865                                        Albuquerque   
796491548338831360                               Reggio Emilia- Italy   
796492986167296000                                    Clutch Town USA   
796496590592622592                                             Sydney   
796497327787831296                                      Orange County   
796499645409136640                     Where there's ☕️ - LDN-Warwick   

                                                          localizacao  \
796326628813053953  so hillary bailed on all her supporters!you ma...   
796326732370505728                                            England   
796327126668574721                                              KENYA   
796327146839048192                                      Ile-de-France   
796327151448576001                                           Portugal   
796327091247742976                                            England   
796327196239347712                                        จ.อุทัยธานี   
796327453534732289                                                 NC   
796327640214990848                                                 CA   
796327701699293185                                           Pakistan   
796327888102551552                                            پاکستان   
796328099977842688                                                 GA   
796328147348291584                                           Portugal   
796328170869915650  so hillary bailed on all her supporters!you ma...   
796328234807869441                                      11/9 and 9/11   
796328402013851648                                           Pakistan   
796328723830231040                                        Hovedstaden   
796328725965115392                                           Pakistan   
796328809570172928                                                 NY   
796328833771151361                                                WA.   
796328833754333185                                         -69.978951   
796329114898747392                                             Norway   
796329182095622147                     after 9/11 and the twin towers   
796329191482490884                                     United Kingdom   
796329198466068480                               United Arab Emirates   
796329349091688448                                              Japan   
796330219267354624                                      11/9 and 9/11   
796330228494794752                                           Pakistan   
796330278713171968                                              lagos   
796330433113944065                                      11/9 and 9/11   
...                                                               ...   
796416766784262144                                                 OH   
796416967330643968                                            England   
796417187582013440                                                 LA   
796418285705236481                                         nice prank   
796418389011005441                                            England   
796419397506236422                                           Pakistan   
796419810888450051                                                 VT   
796420114472140800                                       South Africa   
796420335281184770                                            پاکستان   
796420940427128832                        on 9-11 america was wounded   
796421633741357056                                                 TX   
796421931536941060  looool dream? your country was built on the ge...   
796422056535527424                                           Pakistan   
796422109585096704                                          Louisiana   
796422271091019776                            turned 9/11 upside down   
796422950035607552                                                 FL   
796422992121237504                                                 NC   
796440184325865486                                                 FL   
796443312886579205                                       Chhattisgarh   
796443516515840000                                            England   
796443676280897537                                                 WA   
796444875432591363                                            England   
796479078543032320  looool dream? your country was built on the ge...   
796482043777581061                                                 IN   
796489601103908865                                                 NM   
796491548338831360                                      11/9 and 9/11   
796492986167296000                            turned 9/11 upside down   
796496590592622592                                          Australia   
796497327787831296                                                 CA   
796499645409136640  looool dream? your country was built on the ge...   

                                                                texto  cluster  
796326628813053953                    but she's never been with you!         5  
796326732370505728  '@iamspencez: we remember 9/11 and today we sh...        5  
796327126668574721  america's worst nightmare was 9/11... now it's...        5  
796327146839048192  america's worst nightmare was 9/11... now it's...        5  
796327151448576001  america's worst nightmare was 9/11... now it's...        5  
796327091247742976  11/9 and 9/11...the two biggest disasters in a...        5  
796327196239347712  9/11 and 11/9...the biggest disasters in ameri...        5  
796327453534732289  america's worst nightmare was 9/11... now it's...        5  
796327640214990848  america's worst nightmare was 9/11... now it's...        5  
796327701699293185          fall of america  - from 9/11 to 11/9  -          5  
796327888102551552  '9/11 never forget  - 11/9  always regrets' - ...        5  
796328099977842688  11/9 and 9/11...the two biggest disasters in a...        5  
796328147348291584  9/11 and 11/9...the biggest disasters in ameri...        5  
796328170869915650                    but she's never been with you!         5  
796328234807869441   both are the biggest disaster in american's h...        5  
796328402013851648          fall of america  - from 9/11 to 11/9  -          5  
796328723830231040  9/11 and 11/9...the biggest disasters in ameri...        5  
796328725965115392          fall of america  - from 9/11 to 11/9  -          5  
796328809570172928  america's worst nightmare was 9/11... now it's...        5  
796328833771151361  america's worst nightmare was 9/11... now it's...        5  
796328833754333185                              11/9 is the new 9/11         5  
796329114898747392          fall of america  - from 9/11 to 11/9  -          5  
796329182095622147              there comes 11/9 and the trump tower         5  
796329191482490884  9/11 and 11/9...the biggest disasters in ameri...        5  
796329198466068480   so 9/11 returns to haunt the us yet again! -  -         5  
796329349091688448  america's worst nightmare was 9/11... now it's...        5  
796330219267354624   both are the biggest disaster in - american's...        5  
796330228494794752          fall of america  - from 9/11 to 11/9  -          5  
796330278713171968  '@iamspencez: we remember 9/11 and today we sh...        5  
796330433113944065   both are the biggest disaster in american's h...        5  
...                                                               ...      ...  
796416766784262144            it's time to take out the trash!  -  -         5  
796416967330643968  9/11 and 11/9...the biggest disasters in ameri...        5  
796417187582013440            it's time to take out the trash!  -  -         5  
796418285705236481                        america. but it's enough -         5  
796418389011005441                   this is not 9/11 but 11/9 -  -          5  
796419397506236422                   this is not 9/11 but 11/9 -  -          5  
796419810888450051            it's time to take out the trash!  -  -         5  
796420114472140800            it's time to take out the trash!  -  -         5  
796420335281184770                   this is not 9/11 but 11/9 -  -          5  
796420940427128832                              on 11-9 america died         5  
796421633741357056            it's time to take out the trash!  -  -         5  
796421931536941060                             it's been a nightmar…         5  
796422056535527424  america's worst nightmare was 9/11... now it's...        5  
796422109585096704            it's time to take out the trash!  -  -         5  
796422271091019776                                    it's 11/9 now.         5  
796422950035607552            it's time to take out the trash!  -  -         5  
796422992121237504            it's time to take out the trash!  -  -         5  
796440184325865486            it's time to take out the trash!  -  -         5  
796443312886579205                         america again hit by 9/11         5  
796443516515840000  9/11 and 11/9...the biggest disasters in ameri...        5  
796443676280897537  america's worst nightmare was 9/11... now it's...        5  
796444875432591363  pti rocks rt bhaijafry: fall of america  - fro...        5  
796479078543032320                             it's been a nightmar…         5  
796482043777581061  comparing someone you don't like to 9/11 is di...        5  
796489601103908865          fall of america  - from 9/11 to 11/9  -          5  
796491548338831360   both are the biggest disaster in american's h...        5  
796492986167296000                                    it's 11/9 now.         5  
796496590592622592  9/11 and 11/9...the biggest disasters in ameri...        5  
796497327787831296                                     america's new         5  
796499645409136640                             it's been a nightmar…         5  

[464 rows x 6 columns]) ; texto
(6,                                        id_original             data  \
796326675252412417  Wed Nov 09 12:20:49 +0000 2016     NuraanAckers   
796326688271532032  Wed Nov 09 12:20:52 +0000 2016    magentafilter   
796326795910017024  Wed Nov 09 12:21:17 +0000 2016   Dionasheremeti   
796326839417532416  Wed Nov 09 12:21:28 +0000 2016          4mxnute   
796326977108066304  Wed Nov 09 12:22:01 +0000 2016     IsabelaTamez   
796327002009649152  Wed Nov 09 12:22:06 +0000 2016   DOWWLUSHOAKLEY   
796327047677308928  Wed Nov 09 12:22:17 +0000 2016  ABA_alkhulaifi_   
796327045672341504  Wed Nov 09 12:22:17 +0000 2016     alaasalnajim   
796327037707386880  Wed Nov 09 12:22:15 +0000 2016      louisftlodo   
796327120763047936  Wed Nov 09 12:22:35 +0000 2016   Jerrold_Comedy   
796327121706774529  Wed Nov 09 12:22:35 +0000 2016     carlito_1006   
796327138693681154  Wed Nov 09 12:22:39 +0000 2016   IErika_Andrade   
796327176719241216  Wed Nov 09 12:22:48 +0000 2016      Ashley_1607   
796327184495472644  Wed Nov 09 12:22:50 +0000 2016     IIIDonnieBoi   
796327270625529856  Wed Nov 09 12:23:11 +0000 2016        Puppy_cth   
796327312111173632  Wed Nov 09 12:23:20 +0000 2016     New_Thitipom   
796327494286712832  Wed Nov 09 12:24:04 +0000 2016    ChaseWelch_85   
796327501350006784  Wed Nov 09 12:24:06 +0000 2016      grace_lomax   
796327645323476992  Wed Nov 09 12:24:40 +0000 2016  ConnorHarriso13   
796327674327212033  Wed Nov 09 12:24:47 +0000 2016  wontletyoudown_   
796327713384468480  Wed Nov 09 12:24:56 +0000 2016       _amber_bjj   
796327715758624768  Wed Nov 09 12:24:57 +0000 2016         dadgrohl   
796327765175836672  Wed Nov 09 12:25:08 +0000 2016   elisabetta7991   
796327803234881536  Wed Nov 09 12:25:18 +0000 2016     ahmadjohan98   
796327835782774784  Wed Nov 09 12:25:25 +0000 2016        mellaryy_   
796327862446026752  Wed Nov 09 12:25:32 +0000 2016     Malick_Wajid   
796327876467507200  Wed Nov 09 12:25:35 +0000 2016   LeratoNkhethoa   
796327924639088641  Wed Nov 09 12:25:46 +0000 2016      AleGetWeird   
796327971107864576  Wed Nov 09 12:25:58 +0000 2016        jennxpenm   
796328016951377920  Wed Nov 09 12:26:08 +0000 2016           _syaxf   
...                                            ...              ...   
796409545027424256  Wed Nov 09 17:50:06 +0000 2016   nebula_skyrim_   
796410138789867521  Wed Nov 09 17:52:28 +0000 2016      johanna4892   
796410356654604294  Wed Nov 09 17:53:20 +0000 2016    MarilynRose__   
796410844863197184  Wed Nov 09 17:55:16 +0000 2016  NakaggwaDorothy   
796411237462671360  Wed Nov 09 17:56:50 +0000 2016          Suleybw   
796412631460544514  Wed Nov 09 18:02:22 +0000 2016  f215845231044c2   
796414839312777220  Wed Nov 09 18:11:09 +0000 2016        daringaqi   
796417514330853376  Wed Nov 09 18:21:46 +0000 2016          acar321   
796418215421177856  Wed Nov 09 18:24:33 +0000 2016         sdtechie   
796418625863303168  Wed Nov 09 18:26:11 +0000 2016           Zaa_73   
796419447229710344  Wed Nov 09 18:29:27 +0000 2016      razakhan_rk   
796419499209748481  Wed Nov 09 18:29:40 +0000 2016           jit523   
796420216616079360  Wed Nov 09 18:32:31 +0000 2016     patticiacont   
796436865813544960  Wed Nov 09 19:38:40 +0000 2016  clarajusticia97   
796438070786686976  Wed Nov 09 19:43:27 +0000 2016          doxtool   
796441094540103685  Wed Nov 09 19:55:28 +0000 2016         KDevally   
796442131938283520  Wed Nov 09 19:59:36 +0000 2016            dfmv_   
796442627575054339  Wed Nov 09 20:01:34 +0000 2016       _ryanstout   
796444028203995136  Wed Nov 09 20:07:08 +0000 2016           musijj   
796479935259049984  Wed Nov 09 22:29:49 +0000 2016   alexis_sharron   
796480204428414976  Wed Nov 09 22:30:53 +0000 2016     sophieKtranz   
796481940769636362  Wed Nov 09 22:37:47 +0000 2016       eva03glenn   
796484681487224832  Wed Nov 09 22:48:40 +0000 2016        russb2002   
796487050488901634  Wed Nov 09 22:58:05 +0000 2016        courrtt__   
796492619043995649  Wed Nov 09 23:20:13 +0000 2016         euR4F4EL   
796493049396400129  Wed Nov 09 23:21:55 +0000 2016           xelene   
796493771122864128  Wed Nov 09 23:24:47 +0000 2016      ziniya_shah   
796494354789515264  Wed Nov 09 23:27:06 +0000 2016  ivoryhersheytan   
796497881209438208  Wed Nov 09 23:41:07 +0000 2016      GiorgiaErca   
796499783615741954  Wed Nov 09 23:48:41 +0000 2016      nanamakeita   

                                    usuario                 localizacao  \
796326675252412417                   London                          UK   
796326688271532032                   London                     England   
796326795910017024                 Mechelen                      België   
796326839417532416           mostly ggroups                some bgroups   
796326977108066304                Monterrey                  Nuevo León   
796327002009649152              Los Angeles                          CA   
796327047677308928                     Doha                       Qatar   
796327045672341504                   الدمام    المملكة العربية السعودية   
796327037707386880                  Sicilia                      Italia   
796327120763047936               New Jersey                         USA   
796327121706774529                  Florida                         USA   
796327138693681154                   Ambato                     Ecuador   
796327176719241216                 New York                          NY   
796327184495472644               West Allis                          WI   
796327270625529856               North East                     England   
796327312111173632                  Bangkok                    Thailand   
796327494286712832                Lake Park                          NC   
796327501350006784                   Boston                          MA   
796327645323476992      Akademi High School                     Yantown   
796327674327212033            Franche-Comté                      France   
796327713384468480          New South Wales                   Australia   
796327715758624768                Milwaukee                   Wisconsin   
796327765175836672                   London                     England   
796327803234881536                 Sandakan                       Sabah   
796327835782774784                     Lima                        Peru   
796327862446026752                Islamabad                    Pakistan   
796327876467507200             Johannesburg                          SA   
796327924639088641                  Bergamo                   Lombardia   
796327971107864576                   Boston                          MA   
796328016951377920        North-East Region                   Singapore   
...                                     ...                         ...   
796409545027424256                Germiston                South Africa   
796410138789867521                   Orange                  New Jersey   
796410356654604294                 San José                  Costa Rica   
796410844863197184                  Kampala                      Uganda   
796411237462671360                    Spain                      Madrid   
796412631460544514                 Budapest                Magyarország   
796414839312777220              Bahria Town                   Islamabad   
796417514330853376  ~he/him~leics/northants                         uk~   
796418215421177856                San Diego                          CA   
796418625863303168                Kimberley                South Africa   
796419447229710344                Islamabad                    Pakistan   
796419499209748481            United States  and it would have survived   
796420216616079360                Tennessee                         USA   
796436865813544960                Barcelona                    Cataluña   
796438070786686976               Birmingham                     England   
796441094540103685                    Texas                    Un-Texan   
796442131938283520                   London                     England   
796442627575054339                  Lincoln                     England   
796444028203995136        Jammu And Kashmir                       India   
796479935259049984                       jc                  tennessee    
796480204428414976                Kitchener                     Ontario   
796481940769636362                  Donegal                     Ireland   
796484681487224832                  Verwood                     England   
796487050488901634                  Memphis                          TN   
796492619043995649            Florianópolis                      Brasil   
796493049396400129                 New York                         USA   
796493771122864128               Perrysburg                          OH   
796494354789515264               Candelaria                  Calabarzon   
796497881209438208              Zero Branco                      Veneto   
796499783615741954                 New York                          NY   

                                                                texto  cluster  
796326675252412417  trump didn't win. racism won. sexism won. hate...        6  
796326688271532032  racism won. - sexism won. - hatred won. - fear...        6  
796326795910017024  trump didn't win. racism won. sexism won. hate...        6  
796326839417532416  trump didn't win. racism won. sexism won. hate...        6  
796326977108066304  trump didn't win. racism won. sexism won. hate...        6  
796327002009649152  trump didn't win. racism won. sexism won. hate...        6  
796327047677308928  trump didn't win. racism won. sexism won. hate...        6  
796327045672341504  trump didn't win. racism won. sexism won. hate...        6  
796327037707386880  racism won. - sexism won. - hatred won. - fear...        6  
796327120763047936  trump didn't win. racism won. sexism won. hate...        6  
796327121706774529  trump didn't win. racism won. sexism won. hate...        6  
796327138693681154  trump didn't win. racism won. sexism won. hate...        6  
796327176719241216  trump didn't win. racism won. sexism won. hate...        6  
796327184495472644  trump didn't win. racism won. sexism won. hate...        6  
796327270625529856  trump didn't win. racism won. sexism won. hate...        6  
796327312111173632  racism won. - sexism won. - hatred won. - fear...        6  
796327494286712832  trump didn't win. racism won. sexism won. hate...        6  
796327501350006784  trump didn't win. racism won. sexism won. hate...        6  
796327645323476992  trump didn't win. racism won. sexism won. hate...        6  
796327674327212033  trump didn't win. racism won. sexism won. hate...        6  
796327713384468480  trump didn't win. racism won. sexism won. hate...        6  
796327715758624768  trump didn't win. racism won. sexism won. hate...        6  
796327765175836672  racism won. - sexism won. - hatred won. - fear...        6  
796327803234881536  racism won. - sexism won. - hatred won. - fear...        6  
796327835782774784  racism won. - sexism won. - hatred won. - fear...        6  
796327862446026752  trump didn't win. racism won. sexism won. hate...        6  
796327876467507200  trump didn't win. racism won. sexism won. hate...        6  
796327924639088641  trump didn't win. racism won. sexism won. hate...        6  
796327971107864576  trump didn't win. racism won. sexism won. hate...        6  
796328016951377920  racism won. - sexism won. - hatred won. - fear...        6  
...                                                               ...      ...  
796409545027424256  trump didn't win. racism won. sexism won. hate...        6  
796410138789867521  trump didn't win. racism won. sexism won. hate...        6  
796410356654604294       trump didn't win.lack of education won.  -          6  
796410844863197184  trump didn't win. racism won. sexism won. hate...        6  
796411237462671360  racism won. - sexism won. - hatred won. - fear...        6  
796412631460544514  racism won. - sexism won. - hatred won. - fear...        6  
796414839312777220  racism won. - sexism won. - hatred won. - fear...        6  
796417514330853376  racism won. - sexism won. - hatred won. - fear...        6  
796418215421177856  trump didn't win. racism won. sexism won. hate...        6  
796418625863303168  trump didn't win. racism won. sexism won. hate...        6  
796419447229710344  trump didn't win. racism won. sexism won. hate...        6  
796419499209748481                                  had hillary won?         6  
796420216616079360  trump didn't win. - fear has won. - hatred has...        6  
796436865813544960  racism won. - sexism won. - hatred won. - fear...        6  
796438070786686976  racism won. - sexism won. - hatred won. - fear...        6  
796441094540103685  hate won. fear won. racism won. sexism won. ho...        6  
796442131938283520  hate won. fear won. racism won. sexism won. ho...        6  
796442627575054339  trump didn't win. racism won. sexism won. hate...        6  
796444028203995136  racism won. - sexism won. - hatred won. - fear...        6  
796479935259049984  trump didn't win. racism won. sexism won. hate...        6  
796480204428414976  trump didn't win. racism won. sexism won. hate...        6  
796481940769636362  racism won. - sexism won. - hatred won. - fear...        6  
796484681487224832                               me when trump won -         6  
796487050488901634  trump didn't win. racism won. sexism won. hate...        6  
796492619043995649  trump didn't win. racism won. sexism won. hate...        6  
796493049396400129  trump didn't win. racism won. sexism won. hate...        6  
796493771122864128  trump didn't win. racism won. sexism won. hate...        6  
796494354789515264  racism won. - sexism won. - hatred won. - fear...        6  
796497881209438208  racism won. - sexism won. - hatred won. - fear...        6  
796499783615741954  racism won. - sexism won. - hatred won. - fear...        6  

[569 rows x 6 columns]) ; texto
(7,                                        id_original             data  \
796328043648122881  Wed Nov 09 12:26:15 +0000 2016     ilovejenni27   
796329516708794368  Wed Nov 09 12:32:06 +0000 2016      Gawjuss_Jaz   
796333615269421057  Wed Nov 09 12:48:23 +0000 2016     _Catiasofia1   
796333615168765952  Wed Nov 09 12:48:23 +0000 2016      Ask_Elissia   
796333618738167808  Wed Nov 09 12:48:24 +0000 2016  C0MEDY_CENTRAL_   
796333618742312960  Wed Nov 09 12:48:24 +0000 2016   FrancininMaraj   
796333618763333632  Wed Nov 09 12:48:24 +0000 2016   ilovegracey333   
796333618733993985  Wed Nov 09 12:48:24 +0000 2016    DelanieRutter   
796333618754895873  Wed Nov 09 12:48:24 +0000 2016         Foodpxxn   
796333618759159808  Wed Nov 09 12:48:24 +0000 2016     HeavenTouch_   
796333618922721281  Wed Nov 09 12:48:24 +0000 2016      GULLYKING82   
796333618742390784  Wed Nov 09 12:48:24 +0000 2016       cantbefxck   
796333619358953472  Wed Nov 09 12:48:24 +0000 2016      MyFirstLov3   
796333619371446273  Wed Nov 09 12:48:24 +0000 2016          mzkiccz   
796333619568635904  Wed Nov 09 12:48:24 +0000 2016        Raine4ver   
796333619648299008  Wed Nov 09 12:48:24 +0000 2016       MIXEDVIBEZ   
796333619929382912  Wed Nov 09 12:48:24 +0000 2016  StealingHearts_   
796333619568640000  Wed Nov 09 12:48:24 +0000 2016  RealJordanGarza   
796333619400896513  Wed Nov 09 12:48:24 +0000 2016           Pax420   
796333620030009345  Wed Nov 09 12:48:24 +0000 2016    SweetAngel_33   
796333620013236224  Wed Nov 09 12:48:24 +0000 2016           TLW446   
796333620021645312  Wed Nov 09 12:48:24 +0000 2016           tkvibe   
796333620092870657  Wed Nov 09 12:48:24 +0000 2016   tumblrfunniest   
796333620071989248  Wed Nov 09 12:48:24 +0000 2016      smilepIease   
796333620084568064  Wed Nov 09 12:48:24 +0000 2016        TheBromen   
796333620269031425  Wed Nov 09 12:48:24 +0000 2016       RubyDJRose   
796333620021620736  Wed Nov 09 12:48:24 +0000 2016      TraveIgoaIs   
796333620201947136  Wed Nov 09 12:48:24 +0000 2016       Stolealike   
796333620239761409  Wed Nov 09 12:48:24 +0000 2016   TruuLifeWisdom   
796333619937742848  Wed Nov 09 12:48:24 +0000 2016        sexisfood   
...                                            ...              ...   
796347632973152256  Wed Nov 09 13:44:05 +0000 2016   szafa3drzwiowa   
796347887948963841  Wed Nov 09 13:45:06 +0000 2016      lameevelynx   
796349991556001794  Wed Nov 09 13:53:28 +0000 2016     nurainiaiman   
796351183556222976  Wed Nov 09 13:58:12 +0000 2016      allynadilla   
796356705823162368  Wed Nov 09 14:20:08 +0000 2016     pinnockettes   
796357069557395456  Wed Nov 09 14:21:35 +0000 2016     Inna_Cut_Vic   
796357644759994368  Wed Nov 09 14:23:52 +0000 2016     strappymybae   
796359466207866881  Wed Nov 09 14:31:07 +0000 2016       ThaBest_96   
796361089785167872  Wed Nov 09 14:37:34 +0000 2016    MahoneConexao   
796361639641522177  Wed Nov 09 14:39:45 +0000 2016    butterfly1636   
796361873264242688  Wed Nov 09 14:40:40 +0000 2016     autumnlmilla   
796361893040521217  Wed Nov 09 14:40:45 +0000 2016        Imvghtbee   
796363113587032064  Wed Nov 09 14:45:36 +0000 2016  rebecca02057611   
796363877323829248  Wed Nov 09 14:48:38 +0000 2016    Amanda_Gulbro   
796364960121163777  Wed Nov 09 14:52:56 +0000 2016  Gabriell_auzier   
796367636691111936  Wed Nov 09 15:03:35 +0000 2016        idkxenola   
796372279965925376  Wed Nov 09 15:22:02 +0000 2016   SportsJorge832   
796374052524830720  Wed Nov 09 15:29:04 +0000 2016          nayduh_   
796374667758075904  Wed Nov 09 15:31:31 +0000 2016          Cessslo   
796376285002006528  Wed Nov 09 15:37:56 +0000 2016       stleslwley   
796380853903523844  Wed Nov 09 15:56:06 +0000 2016       jgracer002   
796381579081814016  Wed Nov 09 15:58:59 +0000 2016  morganvandorenn   
796381879452639232  Wed Nov 09 16:00:10 +0000 2016     vanessajune_   
796402053727797249  Wed Nov 09 17:20:20 +0000 2016      _Jess_evans   
796403155718258688  Wed Nov 09 17:24:43 +0000 2016     nataliehaszu   
796415577992687620  Wed Nov 09 18:14:05 +0000 2016          Ker8Mel   
796416115220107264  Wed Nov 09 18:16:13 +0000 2016          Ker8Mel   
796417075195576320  Wed Nov 09 18:20:02 +0000 2016  Awkwardlypandab   
796440453964910592  Wed Nov 09 19:52:56 +0000 2016       RichGarvey   
796441182893207553  Wed Nov 09 19:55:49 +0000 2016        rinemafrs   

                                           usuario               localizacao  \
796328043648122881                             615  obama must cry right now   
796329516708794368                    678 : 423 ✈️  obama must cry right now   
796333615269421057                        London    obama must cry right now   
796333615168765952  R.I.P. Jay (My Little Brother)  obama must cry right now   
796333618738167808                       Worldwide  obama must cry right now   
796333618742312960              Follow Me  please   obama must cry right now   
796333618763333632                            None  obama must cry right now   
796333618733993985    YouTuber: Check out the link  obama must cry right now   
796333618754895873                open the fridge   obama must cry right now   
796333618759159808                            None  obama must cry right now   
796333618922721281    ✈️CALI to NYC NYC to CALI ✈️  obama must cry right now   
796333618742390784                            None  obama must cry right now   
796333619358953472                 in your ❤ baby   obama must cry right now   
796333619371446273                     Los Angeles  obama must cry right now   
796333619568635904                            None  obama must cry right now   
796333619648299008                            None  obama must cry right now   
796333619929382912                            None  obama must cry right now   
796333619568640000                            None  obama must cry right now   
796333619400896513                            None  obama must cry right now   
796333620030009345                            None  obama must cry right now   
796333620013236224                      Right Here  obama must cry right now   
796333620021645312                           earth  obama must cry right now   
796333620092870657                       Worldwide  obama must cry right now   
796333620071989248                            None  obama must cry right now   
796333620084568064                            None  obama must cry right now   
796333620269031425                            None  obama must cry right now   
796333620021620736                           Earth  obama must cry right now   
796333620201947136                            None  obama must cry right now   
796333620239761409                        Out Here  obama must cry right now   
796333619937742848                       Singapore  obama must cry right now   
...                                            ...                       ...   
796347632973152256                            None  obama must cry right now   
796347887948963841                            None  obama must cry right now   
796349991556001794                           jb↔n9  obama must cry right now   
796351183556222976                      KL - PERAK  obama must cry right now   
796356705823162368                            None  obama must cry right now   
796357069557395456                        W/ loml   obama must cry right now   
796357644759994368                       México✈LA  obama must cry right now   
796359466207866881                        Barbados  obama must cry right now   
796361089785167872                            None  obama must cry right now   
796361639641522177               Sunny Southern CA  obama must cry right now   
796361873264242688         litchfield prison / htx  obama must cry right now   
796361893040521217                            None  obama must cry right now   
796363113587032064                              UK  obama must cry right now   
796363877323829248                            None  obama must cry right now   
796364960121163777                            None  obama must cry right now   
796367636691111936                             dwt  obama must cry right now   
796372279965925376                            None  obama must cry right now   
796374052524830720                            None  obama must cry right now   
796374667758075904                            None  obama must cry right now   
796376285002006528                            asse  obama must cry right now   
796380853903523844                            None  obama must cry right now   
796381579081814016                            None  obama must cry right now   
796381879452639232                            None  obama must cry right now   
796402053727797249                       Inverness  obama must cry right now   
796403155718258688                     Bassnectar   obama must cry right now   
796415577992687620                         Germany  obama must cry right now   
796416115220107264                         Germany  obama must cry right now   
796417075195576320                  United Kingdom  obama must cry right now   
796440453964910592                            Mpls  obama must cry right now   
796441182893207553                         France   obama must cry right now   

                                                                texto  cluster  
796328043648122881   because all that he created and improved will...        7  
796329516708794368   because all that he created and improved will...        7  
796333615269421057   because all that he created and improved will...        7  
796333615168765952   because all that he created and improved will...        7  
796333618738167808   because all that he created and improved will...        7  
796333618742312960   because all that he created and improved will...        7  
796333618763333632   because all that he created and improved will...        7  
796333618733993985   because all that he created and improved will...        7  
796333618754895873   because all that he created and improved will...        7  
796333618759159808   because all that he created and improved will...        7  
796333618922721281   because all that he created and improved will...        7  
796333618742390784   because all that he created and improved will...        7  
796333619358953472   because all that he created and improved will...        7  
796333619371446273   because all that he created and improved will...        7  
796333619568635904   because all that he created and improved will...        7  
796333619648299008   because all that he created and improved will...        7  
796333619929382912   because all that he created and improved will...        7  
796333619568640000   because all that he created and improved will...        7  
796333619400896513   because all that he created and improved will...        7  
796333620030009345   because all that he created and improved will...        7  
796333620013236224   because all that he created and improved will...        7  
796333620021645312   because all that he created and improved will...        7  
796333620092870657   because all that he created and improved will...        7  
796333620071989248   because all that he created and improved will...        7  
796333620084568064   because all that he created and improved will...        7  
796333620269031425   because all that he created and improved will...        7  
796333620021620736   because all that he created and improved will...        7  
796333620201947136   because all that he created and improved will...        7  
796333620239761409   because all that he created and improved will...        7  
796333619937742848   because all that he created and improved will...        7  
...                                                               ...      ...  
796347632973152256   because all that he created and improved will...        7  
796347887948963841   because all that he created and improved will...        7  
796349991556001794   because all that he created and improved will...        7  
796351183556222976   because all that he created and improved will...        7  
796356705823162368   because all that he created and improved will...        7  
796357069557395456   because all that he created and improved will...        7  
796357644759994368   because all that he created and improved will...        7  
796359466207866881   because all that he created and improved will...        7  
796361089785167872   because all that he created and improved will...        7  
796361639641522177   because all that he created and improved will...        7  
796361873264242688   because all that he created and improved will...        7  
796361893040521217   because all that he created and improved will...        7  
796363113587032064   because all that he created and improved will...        7  
796363877323829248   because all that he created and improved will...        7  
796364960121163777   because all that he created and improved will...        7  
796367636691111936   because all that he created and improved will...        7  
796372279965925376   because all that he created and improved will...        7  
796374052524830720   because all that he created and improved will...        7  
796374667758075904   because all that he created and improved will...        7  
796376285002006528   because all that he created and improved will...        7  
796380853903523844   because all that he created and improved will...        7  
796381579081814016   because all that he created and improved will...        7  
796381879452639232   because all that he created and improved will...        7  
796402053727797249   because all that he created and improved will...        7  
796403155718258688   because all that he created and improved will...        7  
796415577992687620   all that he created and improved and worked f...        7  
796416115220107264   all that he created and improved and worked f...        7  
796417075195576320   because all that he created and improved will...        7  
796440453964910592   because all that he created and improved will...        7  
796441182893207553   because all that he created and improved will...        7  

[198 rows x 6 columns]) ; texto
(8,                                        id_original             data  \
796326676154187776  Wed Nov 09 12:20:49 +0000 2016  BitchyFanGirl18   
796326723600138240  Wed Nov 09 12:21:00 +0000 2016   gdbechter20182   
796326835273560064  Wed Nov 09 12:21:27 +0000 2016         Dinaaaax   
796327013162303488  Wed Nov 09 12:22:09 +0000 2016       fairIysean   
796327084247384064  Wed Nov 09 12:22:26 +0000 2016    escapewdolans   
796327167319642112  Wed Nov 09 12:22:46 +0000 2016         nrizyani   
796327264673820676  Wed Nov 09 12:23:09 +0000 2016     AlieThatsDan   
796327336765489153  Wed Nov 09 12:23:26 +0000 2016  GregoryKilbom11   
796327531733520384  Wed Nov 09 12:24:13 +0000 2016     safamedini21   
796327571289964544  Wed Nov 09 12:24:22 +0000 2016     laurapedro99   
796327675971379200  Wed Nov 09 12:24:47 +0000 2016        xmendesea   
796327864627036160  Wed Nov 09 12:25:32 +0000 2016    SammyMorgan91   
796327914434199552  Wed Nov 09 12:25:44 +0000 2016    elisfarissa__   
796327946789097472  Wed Nov 09 12:25:52 +0000 2016        zbdshdan_   
796327985901162496  Wed Nov 09 12:26:01 +0000 2016    JoyJohnsonXX_   
796328515083894784  Wed Nov 09 12:28:07 +0000 2016  TheyLove_Miesha   
796328541008883712  Wed Nov 09 12:28:13 +0000 2016         _LeWoman   
796328613914222592  Wed Nov 09 12:28:31 +0000 2016     miansalman91   
796328895289049088  Wed Nov 09 12:29:38 +0000 2016       Khairulnx1   
796329003653197824  Wed Nov 09 12:30:04 +0000 2016     chescasavage   
796329035664068608  Wed Nov 09 12:30:11 +0000 2016     Noura_almeer   
796329042760912896  Wed Nov 09 12:30:13 +0000 2016     ohshittkitty   
796329214635024384  Wed Nov 09 12:30:54 +0000 2016      MammaHolley   
796330220492062720  Wed Nov 09 12:34:54 +0000 2016       Hajiazubby   
796330603968888833  Wed Nov 09 12:36:25 +0000 2016         KofiWolf   
796330771653001217  Wed Nov 09 12:37:05 +0000 2016         Noza_Nel   
796331398147739648  Wed Nov 09 12:39:35 +0000 2016          ElwedQ8   
796331656789508096  Wed Nov 09 12:40:36 +0000 2016       UmerGoraya   
796331896884121602  Wed Nov 09 12:41:34 +0000 2016      atejada1017   
796332056817045504  Wed Nov 09 12:42:12 +0000 2016  OccupyThDream67   
...                                            ...              ...   
796392736098287617  Wed Nov 09 16:43:19 +0000 2016         ttsreina   
796393161417494528  Wed Nov 09 16:45:00 +0000 2016     JuniorTulasi   
796394659102785536  Wed Nov 09 16:50:57 +0000 2016   sanangelotexan   
796396532178231296  Wed Nov 09 16:58:24 +0000 2016      LionThomas1   
796399119443128320  Wed Nov 09 17:08:41 +0000 2016          MSYODOE   
796400132812107776  Wed Nov 09 17:12:42 +0000 2016  sunshine0styles   
796400395950182400  Wed Nov 09 17:13:45 +0000 2016     LovieSukhani   
796401642086297600  Wed Nov 09 17:18:42 +0000 2016            oWflz   
796402097247887360  Wed Nov 09 17:20:31 +0000 2016  sharmanftkelley   
796402485825048576  Wed Nov 09 17:22:03 +0000 2016       doggrandma   
796403306197348352  Wed Nov 09 17:25:19 +0000 2016    marynicolefox   
796403947753836545  Wed Nov 09 17:27:52 +0000 2016     ZaynsBlondes   
796408978917900288  Wed Nov 09 17:47:51 +0000 2016      mommygreen9   
796410096536330240  Wed Nov 09 17:52:18 +0000 2016        mrkecik90   
796411111100841988  Wed Nov 09 17:56:20 +0000 2016      Mis3Corsica   
796412887262601216  Wed Nov 09 18:03:23 +0000 2016        wesley116   
796414501419618305  Wed Nov 09 18:09:48 +0000 2016     Little_Cabyo   
796422262291365890  Wed Nov 09 18:40:38 +0000 2016      syedcyarali   
796423288679440384  Wed Nov 09 18:44:43 +0000 2016            Mzz3_   
796439954327011330  Wed Nov 09 19:50:56 +0000 2016   ExUnitateVires   
796440769275916288  Wed Nov 09 19:54:11 +0000 2016      NollieRough   
796441749971468291  Wed Nov 09 19:58:05 +0000 2016      biggiemafia   
796442821402230791  Wed Nov 09 20:02:20 +0000 2016          droalex   
796478404468080640  Wed Nov 09 22:23:44 +0000 2016         Cfneeley   
796478619895955456  Wed Nov 09 22:24:35 +0000 2016      peter_rolon   
796480966097334273  Wed Nov 09 22:33:54 +0000 2016    FckngPathetic   
796481557213147140  Wed Nov 09 22:36:15 +0000 2016  sylvesterbrenda   
796485056286101505  Wed Nov 09 22:50:10 +0000 2016        ilylexie3   
796500535671160833  Wed Nov 09 23:51:40 +0000 2016     Holmesdonna1   
796501667315322880  Wed Nov 09 23:56:10 +0000 2016  Barbara13929882   

                                           usuario  \
796326676154187776                            None   
796326723600138240                   United States   
796326835273560064                            None   
796327013162303488               11/3/2016 saw tøp   
796327084247384064                           Italy   
796327167319642112                            None   
796327264673820676                             Ldn   
796327336765489153                            None   
796327531733520384                           tunis   
796327571289964544                            None   
796327675971379200                      he follows   
796327864627036160                      Pittsburgh   
796327914434199552                        Malaysia   
796327946789097472                            None   
796327985901162496                              LA   
796328515083894784                         Broward   
796328541008883712                           Italy   
796328613914222592                       islamabad   
796328895289049088                            None   
796329003653197824                         London    
796329035664068608                          bh|uae   
796329042760912896                            None   
796329214635024384                            None   
796330220492062720                            None   
796330603968888833                           Ghana   
796330771653001217                    South Africa   
796331398147739648                        Kuwait ♥   
796331656789508096                         Multan    
796331896884121602                       Rep. Dom.   
796332056817045504                            None   
...                                            ...   
796392736098287617                            None   
796393161417494528                           Accra   
796394659102785536                            None   
796396532178231296                      San Marcos   
796399119443128320                            None   
796400132812107776                            None   
796400395950182400                           Mithi   
796401642086297600                        The Fold   
796402097247887360  https://twitter.com/91MCCALYES   
796402485825048576                            None   
796403306197348352                         Florida   
796403947753836545                    Zayn's house   
796408978917900288                            None   
796410096536330240                       Ulu Tiram   
796411111100841988                          France   
796412887262601216                            None   
796414501419618305          Hérouville-Saint-Clair   
796422262291365890                       Islamabad   
796423288679440384                             جدة   
796439954327011330                       Cape Town   
796440769275916288                      Shah alam    
796441749971468291                           TEXAS   
796442821402230791                         Nowhere   
796478404468080640                  S. Central Fl.   
796478619895955456                     Puerto Rico   
796480966097334273                  Islas Canarias   
796481557213147140                            None   
796485056286101505                            None   
796500535671160833                            None   
796501667315322880                            None   

                                                 localizacao  \
796326676154187776                              as a gay man   
796326723600138240                                 be strong   
796326835273560064                           congratulations   
796327013162303488                           congratulations   
796327084247384064                           congratulations   
796327167319642112                                 be strong   
796327264673820676                   congratulations america   
796327336765489153                              as a gay man   
796327531733520384                           congratulations   
796327571289964544                           congratulations   
796327675971379200                           congratulations   
796327864627036160                   congratulations america   
796327914434199552                                 be strong   
796327946789097472                                 be strong   
796327985901162496                   congratulations america   
796328515083894784                   congratulations america   
796328541008883712                   congratulations america   
796328613914222592                           congratulations   
796328895289049088                                 be strong   
796329003653197824                   congratulations america   
796329035664068608                           congratulations   
796329042760912896                              as a gay man   
796329214635024384                           congratulations   
796330220492062720                           congratulations   
796330603968888833                           congratulations   
796330771653001217                              as a gay man   
796331398147739648                   congratulations america   
796331656789508096                           congratulations   
796331896884121602                   congratulations america   
796332056817045504                              as a gay man   
...                                                      ...   
796392736098287617                              as a gay man   
796393161417494528                                     Ghana   
796394659102785536                                   tonight   
796396532178231296                                        TX   
796399119443128320                              as a gay man   
796400132812107776                i am sorry for you america   
796400395950182400                           congratulations   
796401642086297600                           congratulations   
796402097247887360                           congratulations   
796402485825048576                                   tonight   
796403306197348352                                   tonight   
796403947753836545                           congratulations   
796408978917900288                              as a gay man   
796410096536330240                                     Johor   
796411111100841988                i am sorry for you america   
796412887262601216                                   tonight   
796414501419618305                                    France   
796422262291365890                                  Pakistan   
796423288679440384                  المملكة العربية السعودية   
796439954327011330  oh ffs! i would say stop embarrassing us   
796440769275916288                                Selangor .   
796441749971468291                   congratulations america   
796442821402230791                                     Italy   
796478404468080640                                   tonight   
796478619895955456                                       USA   
796480966097334273                                    España   
796481557213147140                                   tonight   
796485056286101505                           congratulations   
796500535671160833                                   tonight   
796501667315322880                              as a gay man   

                                                                texto  cluster  
796326676154187776   i'm truly terrified of the future for my coun...        8  
796326723600138240                                    world :') -  -         8  
796326835273560064   america. you're officially the dumbest countr...        8  
796327013162303488   america. you're officially the dumbest countr...        8  
796327084247384064   america. you're officially the dumbest countr...        8  
796327167319642112                                    world :') -  -         8  
796327264673820676   you showed the rest of the world just how une...        8  
796327336765489153   i'm truly terrified of the future for my coun...        8  
796327531733520384   america. you're officially the dumbest countr...        8  
796327571289964544   america. you're officially the dumbest countr...        8  
796327675971379200   america. you're officially the dumbest countr...        8  
796327864627036160   you showed the rest of the world just how une...        8  
796327914434199552                                    world :') -  -         8  
796327946789097472                                    world :') -  -         8  
796327985901162496   you showed the rest of the world just how une...        8  
796328515083894784   you showed the rest of the world just how une...        8  
796328541008883712   you showed the rest of the world just how une...        8  
796328613914222592   america. you're officially the dumbest countr...        8  
796328895289049088                                    world :') -  -         8  
796329003653197824   you showed the rest of the world just how une...        8  
796329035664068608   america. you're officially the dumbest countr...        8  
796329042760912896   i'm truly terrified of the future for my coun...        8  
796329214635024384   america. you're officially the dumbest countr...        8  
796330220492062720   america. you're officially the dumbest countr...        8  
796330603968888833   america. you're officially the dumbest countr...        8  
796330771653001217   i'm truly terrified of the future for my coun...        8  
796331398147739648   you showed the rest of the world just how une...        8  
796331656789508096   america. you're officially the dumbest countr...        8  
796331896884121602   you showed the rest of the world just how une...        8  
796332056817045504   i'm truly terrified of the future for my coun...        8  
...                                                               ...      ...  
796392736098287617   i'm truly terrified of the future for my coun...        8  
796393161417494528      the whole world is definitely in trouble.. -         8  
796394659102785536             the free world became a little freer.         8  
796396532178231296  a man who can't handle his own twitter account...        8  
796399119443128320   i'm truly terrified of the future for my coun...        8  
796400132812107776   but most people of the world are really disap...        8  
796400395950182400   america. you're officially the dumbest countr...        8  
796401642086297600   america. you're officially the dumbest countr...        8  
796402097247887360   america. you're officially the dumbest countr...        8  
796402485825048576             the free world became a little freer.         8  
796403306197348352             the free world became a little freer.         8  
796403947753836545   america. you're officially the dumbest countr...        8  
796408978917900288   i'm truly terrified of the future for my coun...        8  
796410096536330240  not sure if i should say rip america or rip wo...        8  
796411111100841988   but most people of the world are really disap...        8  
796412887262601216             the free world became a little freer.         8  
796414501419618305  a man who can't handle his own twitter account...        8  
796422262291365890  the world is in abyss because a stupid nation ...        8  
796423288679440384  a man who can't handle his own twitter account...        8  
796439954327011330   but no keep on so the real world can see what...        8  
796440769275916288  not sure if i should say rip america or rip wo...        8  
796441749971468291   you showed the rest of the world just how une...        8  
796442821402230791                        welcome to the real world.         8  
796478404468080640             the free world became a little freer.         8  
796478619895955456  we all need to pray its the end of the world a...        8  
796480966097334273  not sure if i should say rip america or rip wo...        8  
796481557213147140             the free world became a little freer.         8  
796485056286101505   america. you're officially the dumbest countr...        8  
796500535671160833             the free world became a little freer.         8  
796501667315322880   i'm truly terrified of the future for my coun...        8  

[306 rows x 6 columns]) ; texto
(9,                                        id_original             data  \
796331278400360449  Wed Nov 09 12:39:06 +0000 2016    america_trump   
796331425968504833  Wed Nov 09 12:39:41 +0000 2016       riverboy19   
796331883969859584  Wed Nov 09 12:41:30 +0000 2016   joseph_lamarca   
796332138828165120  Wed Nov 09 12:42:31 +0000 2016   billyboblouise   
796332604421271552  Wed Nov 09 12:44:22 +0000 2016        s_manoel1   
796332625958944768  Wed Nov 09 12:44:27 +0000 2016     skyzbabe1961   
796332870440730624  Wed Nov 09 12:45:26 +0000 2016   retiredladycop   
796334947791421441  Wed Nov 09 12:53:41 +0000 2016    JoanneColombo   
796334989763809281  Wed Nov 09 12:53:51 +0000 2016           ed5378   
796335179161686016  Wed Nov 09 12:54:36 +0000 2016     CocksonJohny   
796335219355828224  Wed Nov 09 12:54:46 +0000 2016   angelinthepine   
796335911478890500  Wed Nov 09 12:57:31 +0000 2016     shellyyk1977   
796336505358872576  Wed Nov 09 12:59:52 +0000 2016     PersachL2121   
796336839678423041  Wed Nov 09 13:01:12 +0000 2016        rains6944   
796338234066345984  Wed Nov 09 13:06:44 +0000 2016      Panda_flexx   
796338829041008640  Wed Nov 09 13:09:06 +0000 2016    AliciaTolbert   
796338929419091969  Wed Nov 09 13:09:30 +0000 2016     GiftedNutter   
796340328576012289  Wed Nov 09 13:15:04 +0000 2016        02757myla   
796341361683349504  Wed Nov 09 13:19:10 +0000 2016          dawntou   
796344025569775616  Wed Nov 09 13:29:45 +0000 2016           jnuz65   
796345382099894272  Wed Nov 09 13:35:09 +0000 2016    america_trump   
796347289841336320  Wed Nov 09 13:42:43 +0000 2016    swimjonahswim   
796348385380995072  Wed Nov 09 13:47:05 +0000 2016      mommags2579   
796348401466150912  Wed Nov 09 13:47:09 +0000 2016   BeachSideKnits   
796349341594165249  Wed Nov 09 13:50:53 +0000 2016       realtorsee   
796349459445805056  Wed Nov 09 13:51:21 +0000 2016       DkneuteSJU   
796349969347158017  Wed Nov 09 13:53:22 +0000 2016       Sofia03336   
796350189837713408  Wed Nov 09 13:54:15 +0000 2016        kgaylandb   
796352612698361856  Wed Nov 09 14:03:53 +0000 2016         lxl20886   
796352791350542338  Wed Nov 09 14:04:35 +0000 2016        slane9699   
...                                            ...              ...   
796411867656814593  Wed Nov 09 17:59:20 +0000 2016           KNP2BP   
796412261795561480  Wed Nov 09 18:00:54 +0000 2016     breakinnewz1   
796412375553474562  Wed Nov 09 18:01:21 +0000 2016  Hay09317403Paul   
796416139521884161  Wed Nov 09 18:16:19 +0000 2016    makdayzrecord   
796416236871712768  Wed Nov 09 18:16:42 +0000 2016   MulberryMayhem   
796416795884322817  Wed Nov 09 18:18:55 +0000 2016      jeanne_tall   
796420278515597318  Wed Nov 09 18:32:45 +0000 2016    america_trump   
796420399026282498  Wed Nov 09 18:33:14 +0000 2016          pladuna   
796420611312492544  Wed Nov 09 18:34:05 +0000 2016  GiveMeLiberty56   
796420751490482177  Wed Nov 09 18:34:38 +0000 2016    Lane26kmp2205   
796421057364295680  Wed Nov 09 18:35:51 +0000 2016    tryguessagain   
796421463842717696  Wed Nov 09 18:37:28 +0000 2016      TerriMathes   
796421677789904896  Wed Nov 09 18:38:19 +0000 2016    erinschmitt66   
796421680893722626  Wed Nov 09 18:38:20 +0000 2016        musejamie   
796423334011535367  Wed Nov 09 18:44:54 +0000 2016         401_9163   
796442535505887233  Wed Nov 09 20:01:12 +0000 2016         HingeNYC   
796479067633709056  Wed Nov 09 22:26:22 +0000 2016    america_trump   
796482660659003392  Wed Nov 09 22:40:38 +0000 2016        glarose73   
796484608980156416  Wed Nov 09 22:48:23 +0000 2016      PatPatojson   
796489368223498241  Wed Nov 09 23:07:18 +0000 2016     MelissaH2016   
796491647265730560  Wed Nov 09 23:16:21 +0000 2016        lismanel1   
796491673899532289  Wed Nov 09 23:16:27 +0000 2016        lismanel1   
796492350210052096  Wed Nov 09 23:19:09 +0000 2016  KhanhBartolomei   
796493982494814208  Wed Nov 09 23:25:38 +0000 2016    CaptainSavard   
796494423320166400  Wed Nov 09 23:27:23 +0000 2016     LindaRockers   
796495542763196417  Wed Nov 09 23:31:50 +0000 2016      RileyJo_USA   
796497095431745536  Wed Nov 09 23:38:00 +0000 2016    thechaoshadow   
796500991613042690  Wed Nov 09 23:53:29 +0000 2016   cradletradcath   
796501675850821633  Wed Nov 09 23:56:12 +0000 2016   Fairmoonrising   
796501703491256321  Wed Nov 09 23:56:19 +0000 2016     ladybuttons1   

                                          usuario  \
796331278400360449                          U S A   
796331425968504833  Victoria falls zimbabwe la ca   
796331883969859584                           None   
796332138828165120                           None   
796332604421271552                           None   
796332625958944768                           None   
796332870440730624                           None   
796334947791421441                  The Big Apple   
796334989763809281                 Florida U.S.A    
796335179161686016                           None   
796335219355828224                           None   
796335911478890500                           None   
796336505358872576                           None   
796336839678423041                           None   
796338234066345984                           None   
796338829041008640                           None   
796338929419091969                             UK   
796340328576012289       West Palm Beach Florida    
796341361683349504                           None   
796344025569775616                           None   
796345382099894272                          U S A   
796347289841336320                           None   
796348385380995072                     new jersey   
796348401466150912              Republic of Texas   
796349341594165249                  United States   
796349459445805056                     New Jersey   
796349969347158017                  United States   
796350189837713408                           None   
796352612698361856                           None   
796352791350542338                           None   
...                                           ...   
796411867656814593                  United States   
796412261795561480                         Global   
796412375553474562                           None   
796416139521884161                            USA   
796416236871712768                           None   
796416795884322817                           None   
796420278515597318                          U S A   
796420399026282498                     New Jersey   
796420611312492544             Free United States   
796420751490482177                           None   
796421057364295680                           None   
796421463842717696                       Illinois   
796421677789904896              pittsburgh.pa usa   
796421680893722626                           None   
796423334011535367                           None   
796442535505887233                           None   
796479067633709056                          U S A   
796482660659003392                           None   
796484608980156416                           None   
796489368223498241                           None   
796491647265730560                         BERLIM   
796491673899532289                         BERLIM   
796492350210052096                           None   
796493982494814208                        Toronto   
796494423320166400                   Aloha Oregon   
796495542763196417                  United States   
796497095431745536                    Trumpsville   
796500991613042690                           None   
796501675850821633                  United States   
796501703491256321                  United States   

                                                          localizacao  \
796331278400360449  we've witnessed more than the rise of @realdon...   
796331425968504833  we've witnessed more than the rise of @realdon...   
796331883969859584  we've witnessed more than the rise of @realdon...   
796332138828165120  we've witnessed more than the rise of @realdon...   
796332604421271552  we've witnessed more than the rise of @realdon...   
796332625958944768  we've witnessed more than the rise of @realdon...   
796332870440730624  we've witnessed more than the rise of @realdon...   
796334947791421441  we've witnessed more than the rise of @realdon...   
796334989763809281  we've witnessed more than the rise of @realdon...   
796335179161686016  we've witnessed more than the rise of @realdon...   
796335219355828224  we've witnessed more than the rise of @realdon...   
796335911478890500  we've witnessed more than the rise of @realdon...   
796336505358872576  we've witnessed more than the rise of @realdon...   
796336839678423041  we've witnessed more than the rise of @realdon...   
796338234066345984  we've witnessed more than the rise of @realdon...   
796338829041008640  we've witnessed more than the rise of @realdon...   
796338929419091969  we've witnessed more than the rise of @realdon...   
796340328576012289  we've witnessed more than the rise of @realdon...   
796341361683349504  we've witnessed more than the rise of @realdon...   
796344025569775616  we've witnessed more than the rise of @realdon...   
796345382099894272  we've witnessed more than the rise of @realdon...   
796347289841336320  we've witnessed more than the rise of @realdon...   
796348385380995072  we've witnessed more than the rise of @realdon...   
796348401466150912  we've witnessed more than the rise of @realdon...   
796349341594165249  we've witnessed more than the rise of @realdon...   
796349459445805056  we've witnessed more than the rise of @realdon...   
796349969347158017  we've witnessed more than the rise of @realdon...   
796350189837713408  we've witnessed more than the rise of @realdon...   
796352612698361856  we've witnessed more than the rise of @realdon...   
796352791350542338  we've witnessed more than the rise of @realdon...   
...                                                               ...   
796411867656814593  we've witnessed more than the rise of @realdon...   
796412261795561480  we've witnessed more than the rise of @realdon...   
796412375553474562  we've witnessed more than the rise of @realdon...   
796416139521884161  we've witnessed more than the rise of @realdon...   
796416236871712768  we've witnessed more than the rise of @realdon...   
796416795884322817  we've witnessed more than the rise of @realdon...   
796420278515597318  we've witnessed more than the rise of @realdon...   
796420399026282498  we've witnessed more than the rise of @realdon...   
796420611312492544  we've witnessed more than the rise of @realdon...   
796420751490482177  we've witnessed more than the rise of @realdon...   
796421057364295680  we've witnessed more than the rise of @realdon...   
796421463842717696  we've witnessed more than the rise of @realdon...   
796421677789904896  we've witnessed more than the rise of @realdon...   
796421680893722626  we've witnessed more than the rise of @realdon...   
796423334011535367  we've witnessed more than the rise of @realdon...   
796442535505887233  we've witnessed more than the rise of @realdon...   
796479067633709056  we've witnessed more than the rise of @realdon...   
796482660659003392  we've witnessed more than the rise of @realdon...   
796484608980156416  we've witnessed more than the rise of @realdon...   
796489368223498241  we've witnessed more than the rise of @realdon...   
796491647265730560  we've witnessed more than the rise of @realdon...   
796491673899532289  we've witnessed more than the rise of @realdon...   
796492350210052096  we've witnessed more than the rise of @realdon...   
796493982494814208  we've witnessed more than the rise of @realdon...   
796494423320166400  we've witnessed more than the rise of @realdon...   
796495542763196417  we've witnessed more than the rise of @realdon...   
796497095431745536  we've witnessed more than the rise of @realdon...   
796500991613042690  we've witnessed more than the rise of @realdon...   
796501675850821633  we've witnessed more than the rise of @realdon...   
796501703491256321  we've witnessed more than the rise of @realdon...   

                                                                texto  cluster  
796331278400360449   but the absolute destruction of mainstream me...        9  
796331425968504833   but the absolute destruction of mainstream me...        9  
796331883969859584   but the absolute destruction of mainstream me...        9  
796332138828165120   but the absolute destruction of mainstream me...        9  
796332604421271552   but the absolute destruction of mainstream me...        9  
796332625958944768   but the absolute destruction of mainstream me...        9  
796332870440730624   but the absolute destruction of mainstream me...        9  
796334947791421441   but the absolute destruction of mainstream me...        9  
796334989763809281   but the absolute destruction of mainstream me...        9  
796335179161686016   but the absolute destruction of mainstream me...        9  
796335219355828224   but the absolute destruction of mainstream me...        9  
796335911478890500   but the absolute destruction of mainstream me...        9  
796336505358872576   but the absolute destruction of mainstream me...        9  
796336839678423041   but the absolute destruction of mainstream me...        9  
796338234066345984   but the absolute destruction of mainstream me...        9  
796338829041008640   but the absolute destruction of mainstream me...        9  
796338929419091969   but the absolute destruction of mainstream me...        9  
796340328576012289   but the absolute destruction of mainstream me...        9  
796341361683349504   but the absolute destruction of mainstream me...        9  
796344025569775616   but the absolute destruction of mainstream me...        9  
796345382099894272   but the absolute destruction of mainstream me...        9  
796347289841336320   but the absolute destruction of mainstream me...        9  
796348385380995072   but the absolute destruction of mainstream me...        9  
796348401466150912   but the absolute destruction of mainstream me...        9  
796349341594165249   but the absolute destruction of mainstream me...        9  
796349459445805056   but the absolute destruction of mainstream me...        9  
796349969347158017   but the absolute destruction of mainstream me...        9  
796350189837713408   but the absolute destruction of mainstream me...        9  
796352612698361856   but the absolute destruction of mainstream me...        9  
796352791350542338   but the absolute destruction of mainstream me...        9  
...                                                               ...      ...  
796411867656814593   but the absolute destruction of mainstream me...        9  
796412261795561480   but the absolute destruction of mainstream me...        9  
796412375553474562   but the absolute destruction of mainstream me...        9  
796416139521884161   but the absolute destruction of mainstream me...        9  
796416236871712768   but the absolute destruction of mainstream me...        9  
796416795884322817   but the absolute destruction of mainstream me...        9  
796420278515597318   but the absolute destruction of mainstream me...        9  
796420399026282498   but the absolute destruction of mainstream me...        9  
796420611312492544   but the absolute destruction of mainstream me...        9  
796420751490482177   but the absolute destruction of mainstream me...        9  
796421057364295680   but the absolute destruction of mainstream me...        9  
796421463842717696   but the absolute destruction of mainstream me...        9  
796421677789904896   but the absolute destruction of mainstream me...        9  
796421680893722626   but the absolute destruction of mainstream me...        9  
796423334011535367   but the absolute destruction of mainstream me...        9  
796442535505887233   but the absolute destruction of mainstream me...        9  
796479067633709056   but the absolute destruction of mainstream me...        9  
796482660659003392   but the absolute destruction of mainstream me...        9  
796484608980156416   but the absolute destruction of mainstream me...        9  
796489368223498241   but the absolute destruction of mainstream me...        9  
796491647265730560   but the absolute destruction of mainstream me...        9  
796491673899532289   but the absolute destruction of mainstream me...        9  
796492350210052096   but the absolute destruction of mainstream me...        9  
796493982494814208   but the absolute destruction of mainstream me...        9  
796494423320166400   but the absolute destruction of mainstream me...        9  
796495542763196417   but the absolute destruction of mainstream me...        9  
796497095431745536   but the absolute destruction of mainstream me...        9  
796500991613042690   but the absolute destruction of mainstream me...        9  
796501675850821633   but the absolute destruction of mainstream me...        9  
796501703491256321   but the absolute destruction of mainstream me...        9  

[160 rows x 6 columns]) ; texto


Principais termos por cluster:

Cluster 0 words: ['trump'], ['donald'], ['elect'], ['presid'], ['fuck'], ['alreadi'], ['j'], ['start'], ['favour'], ['odd'], ['america'], ['peopl'], ['man'], ['racist'], ['exist'], ['aliv'], ['blatantli'], ['white'], ['doesn'], ['tell'], ['tower'], ['onli'], ['vote'], ['end'], ['just'], ['t'], ['racism'], ['thi'], ['new'], ['ruin'], ['prevent'], ['import'], ['underestim'], ['liber'], ['black'], ['u'], ['know'], ['wa'], ['american'], ['state'], ['proof'], ['play'], ['got'], ['trust'], ['today'], ['year'], ['ago'], ['say'], ['introduc'], ['won'], ['raci'], ['melania'], ['cut'], ['leg'], ['confirm'], ['hi'], ['ladi'], ['8'], ['guy'], ['anyon'], ['leadership'], ['gener'], ['honor'], ['empir'], ['amp'], ['unit'], ['45th'], ['congratul'], ['build'], ['d'], ['make'], ['polit'], ['s'], ['joke'], ['feel'], ['disappoint'], ['hillari'], ['went'], ['ha'], ['poll'], ['10'], ['think'], ['idiot'], ['truli'], ['wait'], ['use'], ['congrat'], ['becaus'], ['orang'], ['win'], ['welcom'], ['world'], ['like'], ['everyon'], ['clinton'], ['realdonaldtrump'], ['head'], ['mlivecch'], ['provmagazin'], ['hell'],

Cluster 1 words: ['nan'], ['zwraidas76'], ['farrag'], ['fanblog'], ['fanci'], ['fantasi'], ['fantast'], ['far'], ['farc'], ['farm'], ['farsad'], ['fathom'], ['fascism'], ['fascist'], ['fashion'], ['fast'], ['fastest'], ['fat'], ['fan'], ['famou'], ['famili'], ['fam'], ['factsvsopinion'], ['factum'], ['faggot'], ['faggotri'], ['fail'], ['failur'], ['fair'], ['fairli'], ['fairview'], ['faith'], ['fake'], ['fall'], ['fallen'], ['fallout'], ['fals'], ['fate'], ['fatimahlove92'], ['factor'], ['filter'], ['feminist'], ['ff'], ['fiction'], ['field'], ['fieri'], ['fight'], ['figur'], ['filthi'], ['fault'], ['final'], ['fine'], ['finest'], ['finger'], ['finish'], ['finland'], ['finna'], ['femal'], ['felt'], ['felon'], ['fellow'], ['favor'], ['favorit'], ['favour'], ['fb'], ['fbi'], ['fear'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feel'], ['feelin'], ['feet'], ['felecia'], ['felicia'], ['factori'], ['fact'], ['firework'], ['ew'], ['everywher'], ['evey'], ['evid'], ['evil'], ['evoc'], ['evolut'], ['evolv'], ['ewerickson'], ['fack'], ['ex'], ['exactli'], ['exampl'], ['exc'], ['excel'], ['exchang'], ['excit'], ['everythin'], ['everyth'], ['everyon'], ['everyday'],

Cluster 2 words: ['right'], ['look'], ['like'], ['wa'], ['thi'], ['thing'], ['fantast'], ['famili'], ['famou'], ['fan'], ['fanblog'], ['fanci'], ['fantasi'], ['zwraidas76'], ['far'], ['farc'], ['fals'], ['farm'], ['farrag'], ['farsad'], ['fascism'], ['fam'], ['fallen'], ['fallout'], ['fail'], ['factor'], ['factori'], ['factsvsopinion'], ['factum'], ['faggot'], ['faggotri'], ['failur'], ['fashion'], ['fair'], ['fairli'], ['fairview'], ['faith'], ['fake'], ['fall'], ['fascist'], ['fast'], ['fack'], ['field'], ['fellow'], ['felon'], ['felt'], ['femal'], ['feminist'], ['ff'], ['fiction'], ['fieri'], ['felecia'], ['fight'], ['figur'], ['filter'], ['filthi'], ['final'], ['fine'], ['finest'], ['felicia'], ['feet'], ['fastest'], ['favour'], ['fat'], ['fate'], ['fathom'], ['fatimahlove92'], ['fault'], ['favor'], ['favorit'], ['fb'], ['feelin'], ['fbi'], ['fear'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feel'], ['fact'], ['facepalm'], ['facil'], ['evolut'], ['everyth'], ['everythin'], ['everywher'], ['evey'], ['evid'], ['evil'], ['evoc'], ['evolv'], ['facet'], ['ew'], ['ewerickson'], ['ex'], ['exactli'], ['exampl'], ['exc'], ['excel'], ['everyon'],

Cluster 3 words: ['thi'], ['trump'], ['s'], ['t'], ['just'], ['american'], ['america'], ['m'], ['don'], ['want'], ['did'], ['mean'], ['lockhart'], ['umbridg'], ['god'], ['peopl'], ['presid'], ['make'], ['man'], ['amp'], ['rub'], ['exc'], ['predict'], ['ha'], ['year'], ['simpson'], ['everyth'], ['illuminati'], ['swear'], ['hillari'], ['know'], ['day'], ['realdonaldtrump'], ['like'], ['everyon'], ['today'], ['elect'], ['new'], ['ago'], ['vote'], ['wa'], ['whi'], ['won'], ['said'], ['need'], ['time'], ['great'], ['think'], ['2016'], ['countri'], ['becom'], ['start'], ['realiti'], ['joke'], ['thank'], ['usa'], ['pack'], ['homophobia'], ['shit'], ['u'], ['funni'], ['support'], ['right'], ['good'], ['noth'], ['night'], ['feel'], ['seriou'], ['happen'], ['say'], ['sex'], ['win'], ['clinton'], ['way'], ['romant'], ['come'], ['work'], ['tear'], ['thing'], ['black'], ['look'], ['public'], ['guess'], ['morn'], ['leav'], ['white'], ['got'], ['yr'], ['best'], ['help'], ['sexism'], ['fuck'], ['sentiment'], ['turn'], ['let'], ['tri'], ['thought'], ['leas'], ['hi'], ['explain'],

Cluster 4 words: ['sorri'], ['feel'], ['america'], ['turkey'], ['noth'], ['know'], ['everyon'], ['m'], ['zwraidas76'], ['fantast'], ['fanblog'], ['fanci'], ['fantasi'], ['farc'], ['far'], ['farm'], ['farrag'], ['farsad'], ['fascism'], ['fascist'], ['fashion'], ['fan'], ['famili'], ['famou'], ['fairli'], ['factsvsopinion'], ['factum'], ['faggot'], ['faggotri'], ['fail'], ['failur'], ['fair'], ['fairview'], ['fastest'], ['faith'], ['fake'], ['fall'], ['fallen'], ['fallout'], ['fals'], ['fam'], ['fast'], ['fate'], ['fat'], ['fellow'], ['felt'], ['femal'], ['feminist'], ['ff'], ['fiction'], ['field'], ['fieri'], ['fight'], ['figur'], ['filter'], ['filthi'], ['final'], ['fine'], ['finest'], ['finger'], ['felon'], ['felicia'], ['factor'], ['felecia'], ['fathom'], ['fatimahlove92'], ['fault'], ['favor'], ['favorit'], ['favour'], ['fb'], ['fbi'], ['fear'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feelin'], ['feet'], ['factori'], ['facil'], ['fact'], ['everythin'], ['evey'], ['evid'], ['evil'], ['evoc'], ['evolut'], ['evolv'], ['ew'], ['ewerickson'], ['ex'], ['exactli'], ['exampl'], ['exc'], ['excel'], ['exchang'], ['excit'], ['everywher'], ['everyth'],

Cluster 5 words: ['s'], ['9'], ['11'], ['trash'], ['time'], ['nightmar'], ['america'], ['histori'], ['disast'], ['biggest'], ['worst'], ['american'], ['wa'], ['fall'], ['hit'], ['tragic'], ['movement'], ['2'], ['rip'], ['rememb'], ['amp'], ['presid'], ['someth'], ['great'], ['day'], ['destroy'], ['real'], ['purg'], ['forget'], ['new'], ['today'], ['lunchtim'], ['iamspencez'], ['abdul'], ['muslim'], ['regret'], ['shall'], ['date'], ['gidi_traff'], ['present'], ['blame'], ['anoth'], ['possibl'], ['thi'], ['alway'], ['make'], ['foget'], ['did'], ['elect'], ['greatest'], ['trump'], ['happen'], ['revers'], ['________'], ['damn'], ['haunt'], ['god'], ['die'], ['becom'], ['hour'], ['tower'], ['return'], ['awo'], ['sudden'], ['coincid'], ['nevermind'], ['come'], ['strike'], ['unit'], ['strang'], ['twice'], ['state'], ['realli'], ['know'], ['frighten'], ['sa'], ['don'], ['pti'], ['commit'], ['fair'], ['dnt'], ['decid'], ['7'], ['tragedi'], ['u'], ['bhaijafri'], ['bigger'], ['like'], ['enlighten'], ['rock'], ['incon'], ['suicid'], ['bless'], ['destruct'], ['1'], ['funni'], ['attack'], ['darkest'], ['t'], ['effect'],

Cluster 6 words: ['won'], ['sexism'], ['racism'], ['hate'], ['didn'], ['win'], ['t'], ['trump'], ['lack'], ['educ'], ['fear'], ['agre'], ['rt'], ['violenc'], ['hatr'], ['word'], ['ha'], ['prejudic'], ['pray'], ['guy'], ['homophobia'], ['u'], ['hillari'], ['wake'], ['lol'], ['shit'], ['everybodi'], ['whi'], ['leagu'], ['onli'], ['did'], ['big'], ['sirjadeja'], ['trolukejri'], ['aye'], ['realdonaldtrump'], ['possibl'], ['patriot'], ['democraci'], ['lost'], ['hope'], ['thi'], ['america'], ['fake'], ['factor'], ['factori'], ['fallen'], ['felon'], ['fall'], ['factsvsopinion'], ['faith'], ['fail'], ['factum'], ['faggot'], ['fairview'], ['fallout'], ['fairli'], ['faggotri'], ['fair'], ['failur'], ['felecia'], ['fanblog'], ['fals'], ['fastest'], ['fate'], ['fathom'], ['fatimahlove92'], ['fault'], ['favor'], ['favorit'], ['favour'], ['fb'], ['fbi'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feel'], ['feelin'], ['fat'], ['fast'], ['fellow'], ['fashion'], ['fam'], ['famili'], ['famou'], ['fan'], ['feet'], ['fanci'], ['fantasi'], ['felicia'], ['far'], ['farc'], ['farm'], ['farrag'], ['farsad'], ['fascism'], ['fascist'], ['fantast'], ['face'],

Cluster 7 words: ['improv'], ['destroy'], ['creat'], ['second'], ['becaus'], ['work'], ['zwraidas76'], ['fanblog'], ['fanci'], ['fantasi'], ['fantast'], ['far'], ['farm'], ['farc'], ['famou'], ['farrag'], ['farsad'], ['fascism'], ['fascist'], ['fashion'], ['fast'], ['fan'], ['fam'], ['famili'], ['fat'], ['factsvsopinion'], ['factum'], ['faggot'], ['faggotri'], ['fail'], ['failur'], ['fair'], ['fairli'], ['fairview'], ['faith'], ['fake'], ['fall'], ['fallen'], ['fallout'], ['fals'], ['fastest'], ['fate'], ['factor'], ['fight'], ['felt'], ['femal'], ['feminist'], ['ff'], ['fiction'], ['field'], ['fieri'], ['figur'], ['fathom'], ['filter'], ['filthi'], ['final'], ['fine'], ['finest'], ['finger'], ['finish'], ['felon'], ['fellow'], ['felicia'], ['felecia'], ['fatimahlove92'], ['fault'], ['favor'], ['favorit'], ['favour'], ['fb'], ['fbi'], ['fear'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feel'], ['feelin'], ['feet'], ['factori'], ['fact'], ['finna'], ['evolv'], ['everythin'], ['everywher'], ['evey'], ['evid'], ['evil'], ['evoc'], ['evolut'], ['ew'], ['exclus'], ['ewerickson'], ['ex'], ['exactli'], ['exampl'], ['exc'], ['excel'], ['exchang'], ['everyth'],

Cluster 8 words: ['world'], ['countri'], ['dumbest'], ['offici'], ['america'], ['just'], ['rest'], ['uneduc'], ['popul'], ['freer'], ['becam'], ['littl'], ['lot'], ['free'], ['rip'], ['terrifi'], ['strong'], ['citizen'], ['truli'], ['stay'], ['futur'], ['lgbt'], ['hope'], ['m'], ['amp'], ['account'], ['sure'], ['arsen'], ['largest'], ['shock'], ['given'], ['code'], ['handl'], ['say'], ['nuclear'], ['man'], ['disappoint'], ['twitter'], ['realli'], ['hi'], ['peopl'], ['ha'], ['right'], ['t'], ['power'], ['trump'], ['end'], ['transfer'], ['leader'], ['crazi'], ['definit'], ['great'], ['real'], ['horrifi'], ['rn'], ['hello'], ['want'], ['wa'], ['know'], ['listen'], ['mad'], ['contend'], ['implod'], ['men'], ['like'], ['hell'], ['happen'], ['thi'], ['stop'], ['genuin'], ['grab'], ['hillari'], ['welcom'], ['troubl'], ['pussi'], ['better'], ['worst'], ['burn'], ['bless'], ['forgotten'], ['ask'], ['pray'], ['abyss'], ['scare'], ['make'], ['white'], ['ppl'], ['watch'], ['gone'], ['need'], ['won'], ['god'], ['look'], ['american'], ['guy'], ['feel'], ['nation'], ['stupid'], ['fuck'], ['becaus'],

Cluster 9 words: ['mainstream'], ['absolut'], ['destruct'], ['media'], ['zwraidas76'], ['farm'], ['fanblog'], ['fanci'], ['fantasi'], ['fantast'], ['far'], ['farc'], ['farrag'], ['famou'], ['farsad'], ['fascism'], ['fascist'], ['fashion'], ['fast'], ['fastest'], ['fat'], ['fan'], ['fam'], ['famili'], ['fathom'], ['factsvsopinion'], ['factum'], ['faggot'], ['faggotri'], ['fail'], ['failur'], ['fair'], ['fairli'], ['fairview'], ['faith'], ['fake'], ['fall'], ['fallen'], ['fallout'], ['fals'], ['fate'], ['fault'], ['fatimahlove92'], ['felt'], ['feminist'], ['ff'], ['fiction'], ['field'], ['fieri'], ['fight'], ['figur'], ['filter'], ['filthi'], ['final'], ['fine'], ['finest'], ['finger'], ['finish'], ['finland'], ['femal'], ['felon'], ['factor'], ['fellow'], ['favor'], ['favorit'], ['favour'], ['fb'], ['fbi'], ['fear'], ['fearless'], ['featur'], ['fed'], ['feed'], ['feel'], ['feelin'], ['feet'], ['felecia'], ['felicia'], ['factori'], ['fack'], ['fact'], ['everythin'], ['evey'], ['evid'], ['evil'], ['evoc'], ['evolut'], ['evolv'], ['ew'], ['ewerickson'], ['ex'], ['exactli'], ['exampl'], ['exc'], ['excel'], ['exchang'], ['excit'], ['everywher'], ['everyth'], ['excus'],

